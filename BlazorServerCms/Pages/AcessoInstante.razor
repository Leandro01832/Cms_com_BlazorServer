@page "/acessoinstante"
@page "/acessoinstante/{insta:int}"
@inject RepositoryPagina repositoryPagina
@inject IJSRuntime js
@inject NavigationManager navigation
<h3>Estante</h3>

@if (insta != null && objEstante != null)
{
    <PageTitle>Estante @insta </PageTitle>
    <p>Você esta acessando a estante nº @i </p>
    <p>Descrição da estante: @objEstante.Descricao </p>
}
else
{
    <PageTitle>Acessando estantes </PageTitle>
    
}

<center>
    <a href="/crud/instante/1" class="btn btn-dark">
        Estantes
    </a>
</center>

<hr />

<p>
    <label>Informe o nº da estante</label>
    <input type="number" min="1" @bind="@insta" />

</p>
<p>
    <a  onclick="@buscarEstante" class="btn btn-dark" >Acessar estante</a>

</p>

@code {
    [Parameter] public int? insta { get; set; }
    public int? i { get; set; }
    private DemoContextFactory db = new DemoContextFactory();
    private ApplicationDbContext Context;
    private Estante objEstante;

    protected override void OnInitialized()
    {
        Context = db.CreateDbContext(null);
    }


    private async void buscarEstante()
    {
        List<Estante>? instantes = await Context.Instante.Include(i => i.livros).OrderBy(l => l.Id).ToListAsync();

        objEstante = instantes.Skip((int)insta - 1).FirstOrDefault();
        i = insta;


        if (objEstante != null)
        {
            navigation.NavigateTo($"/acessoinstante/{insta}");
            List<Livro> livros = objEstante.livros.OrderBy(l => l.Id).ToList();
            string url = "";
            for (var i = 0; i < livros.Count; i++)
            {
                if (livros[i].IsBook)
                url = $"{livros[i]!.url}/filtro/{livros[i].capitulo}/pasta-{livros[i].pasta}/0/{i + 1}/0/{repositoryPagina!.buscarDominio()}/comp/0/0/0/0/0/0/0/0/0/0";
                
                else
                    url = $"{livros[i]!.UrlNoBook}";
                await js!.InvokeAsync<object>("AcessarSites", url);
            }
        }
    }

}
