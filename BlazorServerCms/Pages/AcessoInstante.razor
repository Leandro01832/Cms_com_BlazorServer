@page "/acessoinstante"
@page "/acessoinstante/{insta:int}"
@inject RepositoryPagina repositoryPagina
@inject IJSRuntime js
@inject NavigationManager navigation
<h3>Instante</h3>

@if (insta != null && objInstante != null)
{
    <PageTitle>Instante @insta </PageTitle>
    <p>Você esta acessando a instante nº @i </p>
    <p>Descrição da instante: @objInstante.Descricao </p>
}
else
{
    <PageTitle>Acessando instantes </PageTitle>
    
}

<center>
    <a href="/crud/instante/@repositoryPagina.buscarAdmin()/1" class="btn btn-dark">
        Instantes
    </a>
</center>

<hr />

<p>
    <label>Informe o nº da instante</label>
    <input type="number" min="1" @bind="@insta" />

</p>
<p>
    <a  onclick="@buscarInstante" class="btn btn-dark" >Acessar instante</a>

</p>

@code {
    [Parameter] public int? insta { get; set; }
    public int? i { get; set; }
    private DemoContextFactory db = new DemoContextFactory();
    private ApplicationDbContext Context;
    private Instante objInstante;

    protected override void OnInitialized()
    {
        Context = db.CreateDbContext(null);
    }


    private async void buscarInstante()
    {
                    var ad = repositoryPagina.buscarAdmin();
        List<Instante>? instantes = await Context.Instante.Include(i => i.livros)
        .Where(l => l.livros.FirstOrDefault(li => li.user == ad) != null)
           .OrderBy(l => l.Id).ToListAsync();

        objInstante = instantes.Skip((int)insta - 1).FirstOrDefault();
        i = insta;


        if (objInstante != null)
        {
            navigation.NavigateTo($"/acessoinstante/{insta}");
            List<Livro> livros = objInstante.livros.OrderBy(l => l.Id).ToList();
            string url = "";
            for (var i = 0; i < livros.Count; i++)
            {
                if (livros[i].IsBook)
                {
                    var preferences = await Context.UserPreferences.FirstOrDefaultAsync(u => u.user == ad && u.capitulo == livros[i].capitulo && u.pasta == livros[i].pasta);
                    if (preferences != null)
                        url = $"{livros[i]!.url}/filtro/{livros[i].capitulo}/pasta-{livros[i].pasta}/0/{i + 1}/0/{repositoryPagina!.buscarDominio()}/{repositoryPagina.buscarAdmin()}/{preferences.p1}/{preferences.p2}/{preferences.p3}/{preferences.p4}/{preferences.p5}/{preferences.p6}/{preferences.p7}/{preferences.p8}/{preferences.p9}/{preferences.p10}";
                    else
                        url = $"{livros[i]!.url}/filtro/{livros[i].capitulo}/pasta-{livros[i].pasta}/0/{i + 1}/0/{repositoryPagina!.buscarDominio()}/{repositoryPagina.buscarAdmin()}/0/0/0/0/0/0/0/0/0/0";
                }
                else
                    url = $"{livros[i]!.UrlNoBook}";
                await js!.InvokeAsync<object>("AcessarSites", url);
            }
        }
    }

}
