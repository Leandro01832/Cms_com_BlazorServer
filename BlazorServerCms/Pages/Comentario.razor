@page "/comentario/{capitulo:int}/{verso:int}"
@inject RepositoryPagina? repositoryPagina
@inject NavigationManager? navigation
@layout MeuLayout


<h3>Comentar</h3>

<BackPage></BackPage>

@{
    if (MensagemComentario != null)
    {
        @MensagemComentario
    }
    foreach (var codHtml in comentarios)
    {
        @codHtml
    }

}







<Editor Id="contentextarea"
            Inline=false
            CloudChannel="5"
            Disable=false
        JsConfSrc="sample"
        ApiKey="m8nq39l31dv5y829ehcjsd0rciwei8crem0yubndhdgs72fd"
        ClassName="tinymce-wrapper" @bind-Value="exampleModel.ContentUser" />
    <a href="#" onclick="@FazerComentario" class="btn btn-dark" >Adicionar comentário</a>



@code {
    [Parameter] public int capitulo { get; set; }
    [Parameter] public int verso { get; set; }
    protected List<MarkupString> comentarios = new List<MarkupString>();
    protected string? MensagemComentario = null;
    Pagina exampleModel = new Pagina();
    Pagina Model = new Pagina();
    private DemoContextFactory db = new DemoContextFactory();
    private ApplicationDbContext Context;



    protected override async Task OnInitializedAsync()
    {
        Context = db.CreateDbContext(null);

        if(capitulo != 0)
        {
            var lst = repositoryPagina!.paginas!.Where(p => p.Story!.PaginaPadraoLink == capitulo).ToList();
            Model = lst.Skip((int)verso - 1).FirstOrDefault()!;
            List<business.Comentario> listaComentarios =
            await Context.Comentario!.Where(c => c.IdPagina == Model!.Id)
                           .OrderBy(c => c.Id)
                           .ToListAsync();
            comentarios = new List<MarkupString>();

            foreach (var item in listaComentarios)
            {
                var p = repositoryPagina.paginas!.Where(pa => pa.Story!.PaginaPadraoLink == item.Capitulo)
                .OrderBy(pa => pa.Id)
                .Skip(item.Verso - 1).First();
                var html = await repositoryPagina
                .renderizarPagina(p);
                var comentario = new MarkupString(html + $" <hr /> <p> Capitulo {item.Capitulo} Verso {item.Verso} </p>");
                comentarios.Add(comentario);
            }
        }

    }

    protected async void FazerComentario()
    {
        var Quant = await Context.Story!.Where(st => st.Nome != "Padrao").ToListAsync();
        var comenta = await Context.Story!.Include(st => st.Pagina)
        .Where(st => st.Comentario)
        .OrderBy(st => st.Id)
        .ToListAsync();
        var Story = comenta.LastOrDefault();

        if (Story == null || Story.Pagina!.ToList().Count > 499)
        {
            Story = new Story
                {
                    Nome = "Comentario " + (comenta.Count + 1),
                    Comentario = true,
                    PaginaPadraoLink = Quant.Count + 1

                };
            Context.Add(Story);
            Context.SaveChanges();

            var str = await Context.Story!.FirstAsync(st => st.Nome == "Padrao");

            Pagina.entity = true;
            var p = new Pagina()
                {
                    Titulo = "Story - " + str.Nome,
                    StoryId = str.Id,
                    ContentUser = "<h1> Story " + Story.Nome + "</h1>"
                };
            Pagina.entity = false;

            Context.Add(p);
            Context.SaveChanges();
            p.Story!.Quantidade++;
        }

        Pagina.entity = true;
        var pagina = new Pagina()
            {
                Titulo = "Story - " + Story.Nome,
                StoryId = Story.Id,
                Comentario = Model.Id,
                ContentUser = $"<div> {exampleModel.ContentUser} </div>"
            };
        Pagina.entity = false;

        if (repositoryPagina.paginas != null)
        {
            Context.Add(pagina);
            Context.SaveChanges();
            pagina.Story.QuantComentario++;
            repositoryPagina.paginas.Add(pagina);
        }

        if (capitulo != 0)
        {
            var comentar = new business.Comentario
                {
                    IdPagina = Model.Id,
                    Capitulo = Story.PaginaPadraoLink,
                    Verso = Story.Pagina!.ToList().Count
                };
            Context.Add(comentar);
            Context.SaveChanges();
        }
        MensagemComentario = $"Comentário feito com sucesso!!! Compartilhe!!! \n capitulo {Story.PaginaPadraoLink} \n verso {Story.Pagina!.ToList().Count}";
        if (capitulo != 0)
            navigation!.NavigateTo($"/renderizar/{capitulo}/{verso}/0/11/1/0/0/0/dominio/comp/comp2");

    }

  

}
