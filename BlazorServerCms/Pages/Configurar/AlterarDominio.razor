@page "/alterardominio"
@inject IWebHostEnvironment Environment
@inject UserManager<UserModel> userManager
@inject NavigationManager navigation
@inject AuthenticationStateProvider AuthenticationStateProvider
@attribute [Authorize]
<h3>Alterar dominio</h3>

@if (exampleModel != null)
{
    <EditForm Model="@exampleModel" OnSubmit="@HandleSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    
    <p>
        <label>www.</label>
            <InputText id="Nome" @bind-Value="exampleModel.Dominio"></InputText>
    </p>

    <button type="submit">Alterar</button>
</EditForm>

}

@code {

    private DemoContextFactory db = new DemoContextFactory();
    private ApplicationDbContext Context;
    private UserModel exampleModel;
    private IBrowserFile file = null;
    private long maxFileSize = 1024 * 800;

    protected override async Task OnInitializedAsync()
    {
        Context = db.CreateDbContext(null);
        var authState = await AuthenticationStateProvider
           .GetAuthenticationStateAsync();
        var user = authState.User;
        exampleModel = await userManager.GetUserAsync(user);
    }

    private async void HandleSubmit()
    {

            var result =  await userManager.UpdateAsync(exampleModel);
            if (result.Succeeded)
            {               
            navigation.NavigateTo($"/{exampleModel.UserName}");
            }
        
        // Process the form
    }

}
