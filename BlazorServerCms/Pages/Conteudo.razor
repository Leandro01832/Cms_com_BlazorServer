@page "/conteudo"
@page "/conteudo/{Id:long}"
@layout LayoutContent
@inject RepositoryPagina repositoryPagina
@inject NavigationManager navigation

@if(f != null)
{
    <a onclick="@(() => { navigation.NavigateTo($"/{c.user}"); })" > @c.user </a>   
    <br />
    <a onclick="@(() => { acessar(f); })" > @f.Nome </a>
}
else if (c != null)
{
    <a onclick="@(() => { navigation.NavigateTo($"/{c.user}"); })" > @c.user </a>    
}
@if(c != null)
{
    <center>
        @markup
    </center>

}
else
{
    <p>No momento não existe conteudo... Aguarde!!!</p>
}

<a class="carousel-control-prev btn btn-dark" onclick="@anterior">
    <svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" fill="currentColor" class="bi bi-chevron-double-left" viewBox="0 0 16 16">
        <path fill-rule="evenodd" d="M8.354 1.646a.5.5 0 0 1 0 .708L2.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z" />
        <path fill-rule="evenodd" d="M12.354 1.646a.5.5 0 0 1 0 .708L6.707 8l5.647 5.646a.5.5 0 0 1-.708.708l-6-6a.5.5 0 0 1 0-.708l6-6a.5.5 0 0 1 .708 0z" />
    </svg>
</a>

<a class="carousel-control-next btn btn-dark" onclick="@proximo">
    <svg xmlns="http://www.w3.org/2000/svg" width="50" height="50" fill="currentColor" class="bi bi-chevron-double-right" viewBox="0 0 16 16">
        <path fill-rule="evenodd" d="M3.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L9.293 8 3.646 2.354a.5.5 0 0 1 0-.708z" />
        <path fill-rule="evenodd" d="M7.646 1.646a.5.5 0 0 1 .708 0l6 6a.5.5 0 0 1 0 .708l-6 6a.5.5 0 0 1-.708-.708L13.293 8 7.646 2.354a.5.5 0 0 1 0-.708z" />
    </svg>
</a>

@code {

    List<Content> content = new List<Content>();
    Content c = null;
    Filtro f = null;
    Story s = null;
    private MarkupString markup;
    private DemoContextFactory db = new DemoContextFactory();
    private ApplicationDbContext Context;
    public ClassArray Arr = new ClassArray();

    int? verso = null;
    int? substory = null;
    int? grupo = null;
    int? subgrupo = null;
    int? subsubgrupo = null;
    int? camadaseis = null;
    int? camadasete = null;
    int? camadaoito = null;
    int? camadanove = null;
    int? camadadez = null;

    [Parameter] public long? Id { get; set; }

    protected override async Task OnParametersSetAsync()
    {
        if (Id == null)
            c = content.First();
        else
            c = content.First(co => co.Id == Id);
        if(c.FiltroId != null)
        {
            f = await Context.Filtro!.FirstAsync(f => f.Id == c.FiltroId);
            s = await Context.Story!
            .Include(st => st.Filtro)!
            .ThenInclude(p => p.Pagina)!
            .ThenInclude(p => p.Pagina)!
            .FirstAsync(st => st.Id == f.StoryId);
        }
        markup = new MarkupString(c.Html);

    }

    protected override void OnInitialized()
    {
        Context = db.CreateDbContext(null);
        content = repositoryPagina.conteudos
        .Where(c => c.Data > DateTime.Now.AddDays(-repositoryPagina.dias)).OrderBy(co => co.Id).ToList();
        verso = 1;
    }

    private void proximo(long Id)
    {
        var index = content.IndexOf(c);
        c = content.Skip(index + 1).FirstOrDefault()!;
        navigation.NavigateTo($"/content/{c.Id}");

    }

    private void anterior(long Id)
    {
        var index = content.IndexOf(c);
        c = content.Skip(index - 1).FirstOrDefault()!;
        navigation.NavigateTo($"/content/{c.Id}");
    }

    private void acessar(Filtro fi)
    {
        var arr = retornarArray(fi);
        setarCamadas(arr);
        var url = retornarUrl();

        navigation.NavigateTo($"{url}");
    }

    private int[] retornarArray(Filtro fi)
    {
        int[] arr = null;
        if (fi is CamadaDez)
            arr = Arr.RetornarArray(s.Filtro, s, 3, fi.Id, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1);
        else if (fi is CamadaNove)                  
            arr = Arr.RetornarArray(s.Filtro, s, 3, fi.Id, 1, 1, 1, 1, 1, 1, 1, 1, 1);
        else if (fi is CamadaOito)                  
            arr = Arr.RetornarArray(s.Filtro, s, 3, fi.Id, 1, 1, 1, 1, 1, 1, 1, 1);
        else if (fi is CamadaSete)                  
            arr = Arr.RetornarArray(s.Filtro, s, 3, fi.Id, 1, 1, 1, 1, 1, 1, 1);
        else if (fi is CamadaSeis)                  
            arr = Arr.RetornarArray(s.Filtro, s, 3, fi.Id, 1, 1, 1, 1, 1, 1);
        else if (fi is SubSubGrupo)                 
            arr = Arr.RetornarArray(s.Filtro, s, 3, fi.Id, 1, 1, 1, 1, 1);
        else if (fi is SubGrupo)                    
            arr = Arr.RetornarArray(s.Filtro, s, 3, fi.Id, 1, 1, 1, 1);
        else if (fi is Grupo)                       
            arr = Arr.RetornarArray(s.Filtro, s, 3, fi.Id, 1, 1, 1);
        else if (fi is SubStory)                    
            arr = Arr.RetornarArray(s.Filtro, s, 3, fi.Id, 1, 1);
        return arr;
    }


    private void setarCamadas(int[] arr)
    {


        if (arr.Length == 10)
        {
            substory = arr[1];
            grupo = arr[2];
            subgrupo = arr[3];
            subsubgrupo = arr[4];
            camadaseis = arr[5];
            camadasete = arr[6];
            camadaoito = arr[7];
            camadanove = arr[8];
            camadadez = arr[9];
        }
        else if (arr.Length == 9)
        {
            substory = arr[1];
            grupo = arr[2];
            subgrupo = arr[3];
            subsubgrupo = arr[4];
            camadaseis = arr[5];
            camadasete = arr[6];
            camadaoito = arr[7];
            camadanove = arr[8];
        }
        else if (arr.Length == 8)
        {
            substory = arr[1];
            grupo = arr[2];
            subgrupo = arr[3];
            subsubgrupo = arr[4];
            camadaseis = arr[5];
            camadasete = arr[6];
            camadaoito = arr[7];
        }
        else if (arr.Length == 7)
        {
            substory = arr[1];
            grupo = arr[2];
            subgrupo = arr[3];
            subsubgrupo = arr[4];
            camadaseis = arr[5];
            camadasete = arr[6];
        }
        else if (arr.Length == 6)
        {
            substory = arr[1];
            grupo = arr[2];
            subgrupo = arr[3];
            subsubgrupo = arr[4];
            camadaseis = arr[5];
        }
        else if (arr.Length == 5)
        {
            substory = arr[1];
            grupo = arr[2];
            subgrupo = arr[3];
            subsubgrupo = arr[4];
        }
        else if (arr.Length == 4)
        {
            substory = arr[1];
            grupo = arr[2];
            subgrupo = arr[3];
        }
        else if (arr.Length == 3)
        {
            substory = arr[1];
            grupo = arr[2];
        }
        else if (arr.Length == 2)
        {
            substory = arr[1];
        }
    }

    private string retornarUrl()
    {
        string url = null;
        if (camadadez != null)
            url = $"/camada10/{repositoryPagina.CapituloLivro}/{substory}/{grupo}/{subgrupo}/{subsubgrupo}/{camadaseis}/{camadasete}/{camadaoito}/{camadanove}/{camadadez}/{verso}/0/11/1/0/0/dominio/comp/comp/comp/comp/comp/comp";
        else if (camadanove != null)
            url = $"/camada9/{repositoryPagina.CapituloLivro}/{substory}/{grupo}/{subgrupo}/{subsubgrupo}/{camadaseis}/{camadasete}/{camadaoito}/{camadanove}/{verso}/0/11/1/0/0/dominio/comp/comp/comp/comp/comp/comp";
        else if (camadaoito != null)
            url = $"/camada8/{repositoryPagina.CapituloLivro}/{substory}/{grupo}/{subgrupo}/{subsubgrupo}/{camadaseis}/{camadasete}/{camadaoito}/{verso}/0/11/1/0/0/dominio/comp/comp/comp/comp/comp/comp";
        else if (camadasete != null)
            url = $"/camada7/{repositoryPagina.CapituloLivro}/{substory}/{grupo}/{subgrupo}/{subsubgrupo}/{camadaseis}/{camadasete}/{verso}/0/11/1/0/0/dominio/comp/comp/comp/comp/comp/comp";
        else if (camadaseis != null)
            url = $"/camada6/{repositoryPagina.CapituloLivro}/{substory}/{grupo}/{subgrupo}/{subsubgrupo}/{camadaseis}/{verso}/0/11/1/0/0/dominio/comp/comp/comp/comp/comp/comp";
        else if (subsubgrupo != null)
            url = $"/camada5/{repositoryPagina.CapituloLivro}/{substory}/{grupo}/{subgrupo}/{subsubgrupo}/{verso}/0/11/1/0/0/dominio/comp/comp/comp/comp/comp/comp";
        else if (subgrupo != null)
            url = $"/camada4/{repositoryPagina.CapituloLivro}/{substory}/{grupo}/{subgrupo}/{verso}/0/11/1/0/0/dominio/comp/comp/comp/comp/comp/comp";
        else if (grupo != null)
            url = $"/camada3/{repositoryPagina.CapituloLivro}/{substory}/{grupo}/{verso}/0/11/1/0/0/dominio/comp/comp/comp/comp/comp/comp";
        else if (substory != null)
            url = $"/camada2/{repositoryPagina.CapituloLivro}/{substory}/{verso}/0/11/1/0/0/dominio/comp/comp/comp/comp/comp/comp";
        else
            url = $"/Renderizar/{repositoryPagina.CapituloLivro}/{verso}/0/11/0/0/0/dominio/comp/comp/comp/comp/comp/comp";
        return url;
    }


}
