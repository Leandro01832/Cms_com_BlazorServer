@page "/crud/instante/{pagina:int}"
@inject NavigationManager navigation
@inject RepositoryPagina repositoryPagina
@inject AuthenticationStateProvider AuthenticationStateProvider
@inject UserManager<IdentityUser> userManager
@attribute [Authorize]

@if (camadas == null)
{
<p><em>Carregando...</em></p>
}
else if (camadas.Count == 0)
{
<p><em>Não existem instantes cadastrados...</em></p>    
}
else
{
    <div>
        <a class="btn btn-success" href="instante/create">Nova instante</a>
    </div>
<table class="table">
    <thead>
        <tr>
                <th>Descrição</th>
                <th>Nº da instante</th>
            <th>Edita</th>
            <th>Deleta</th>
        </tr>
    </thead>
    <tbody>
            @foreach (var instante in camadas)
        {
                var num = camadas.IndexOf(instante) + 1;
                <tr>
                <td>@instante.Descricao</td>
                <td>@num</td>
                <td><a class="btn btn-primary" href="instante/edit/@instante.Id">Editar</a> </td>
                <td><a class="btn btn-primary" href="instante/add/@instante.Id">Adicionar Livro</a> </td>
               
            </tr>
        }
    </tbody>
</table>

}
<div>
    <label>Lista:</label>
    <input type="number" onchange="@acessarPagina" min="1" />
    <a class="btn btn-success" href="instante/create">Nova instante</a>
</div>

@code {
    protected List<Instante> camadas = new List<Instante>();
    [Parameter] public int pagina { get; set; } = 1;
    private DemoContextFactory db = new DemoContextFactory();
    private ApplicationDbContext Context;

    protected override async Task OnParametersSetAsync()
    {
        await CarregaCamadas(pagina);
    }

    protected override async Task OnInitializedAsync()
    {
        Context = db.CreateDbContext(null);
        await CarregaCamadas(pagina);
    }

    async Task CarregaCamadas(int pag)
    {
        var authState = await AuthenticationStateProvider
           .GetAuthenticationStateAsync();
        var user = authState.User;
        var ad =  repositoryPagina.buscarAdmin();
        if (user.Identity!.Name == ad)
        {
            camadas.AddRange(await Context.InstanteAdmin!
        .OrderBy(p => p.Id)
               .Skip((pag - 1) * 10)
               .Take(10)
        .ToListAsync());
        }
        else
        {
            camadas.AddRange( await Context.InstanteUser!
       .OrderBy(p => p.Id)
              .Skip((pag - 1) * 10)
              .Take(10)
       .ToListAsync());

        }
    }

    private void acessarPagina(ChangeEventArgs e)
    {
        if (!string.IsNullOrEmpty(e.Value!.ToString()) && e.Value!.ToString() != "0")
            navigation.NavigateTo($"/crud/instante/{e.Value!.ToString()}");
        else
            navigation.NavigateTo($"/crud/instante/1");
    }

}
