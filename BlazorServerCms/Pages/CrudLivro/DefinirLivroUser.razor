@page "/user-book/{Id:long}"
@inject RepositoryPagina repositoryPagina
@inject NavigationManager navigation
@inject AuthenticationStateProvider AuthenticationStateProvider
@attribute [Authorize]
@inject IJSRuntime js
<h3>Definir Livro</h3>




<EditForm Model="@livro" OnSubmit="@HandleSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />  
    <select @bind="livro.url">
        <option value="" >Selecione uma opção</option>
        @{
            if (livros.Count > 0)
                foreach (var item in livros!.Where(sub => sub.InstanteId == null && sub.IsBook ||
                sub.InstanteId == null && !sub.IsBook && user.Identity!.Name == repositoryPagina.buscarAdmin()))
            {
                <option value="@item.url">@item.url</option>
            }
         }
    </select>
    <p>
        <label>Capitulo:</label>
        <InputNumber id="Capitulo" @bind-Value="@livro.capitulo"></InputNumber>
    </p>
    <p>
        <label>Pasta:</label>
        <InputNumber id="Pasta" @bind-Value="@livro.pasta"></InputNumber>
    </p>
    <button type="submit">Definir</button>
</EditForm>

@code {
    Livro livro = new Livro();
    [Parameter] public long Id { get; set; }
    List<Livro> livros = new List<Livro>();
    private DemoContextFactory db = new DemoContextFactory();
    private ApplicationDbContext Context;
    private ClaimsPrincipal user;

    protected override async Task OnInitializedAsync()
    {
        Context = db.CreateDbContext(null);
        livro = await Context.Livro.FirstOrDefaultAsync(l => l.Id == Id);
        livros = await Context.Livro!.ToListAsync();
        var authState = await AuthenticationStateProvider
           .GetAuthenticationStateAsync();
        user = authState.User;
    }


    private async void HandleSubmit()
    {
        if(livro.capitulo > 0 && livro.pasta > 0)
        {
            Context.Update(livro);
            Context.SaveChanges();
            navigation.NavigateTo("/");            
        }
    }

   async void selecionar(Livro liv)
    {
        await js!.InvokeAsync<object>("SelecionarLivro", liv.Id);
    }

    
}
