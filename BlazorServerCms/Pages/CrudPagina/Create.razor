@page "/pagina/create"
@inject NavigationManager navigation
@inject RepositoryPagina repositoryPagina
@inject AuthenticationStateProvider? AuthenticationStateProvider
@inject UserManager<UserModel> userManager
@attribute [Authorize(Roles = "Admin, Manager, Assinante")]

<Editor Id="contentextarea"
        Inline=false
        CloudChannel="5"
        Disable=false
        JsConfSrc="sample"
        ApiKey="m8nq39l31dv5y829ehcjsd0rciwei8crem0yubndhdgs72fd"
        ClassName="tinymce-wrapper" @bind-Value="exampleModel.Html" />

<EditForm Model="@exampleModel" OnSubmit="@HandleSubmit">
    <DataAnnotationsValidator />




    <ValidationSummary />
    <p>
        <label>Titulo:</label>
        <InputText id="Titulo" @bind-Value="exampleModel.Titulo"  />
    </p>


    @if (!EscolherUsuario)
    {

        <p>
            <label>Livro:</label>
            <select @bind="exampleModel.LivroId">

                @foreach (var item in usuario.Assinatura)
                {
                    if (primeiroLoop)
                    {
                        <option value="@item.Livro!.Id" id="option@(item.Livro.Id)" selected>@item.Livro.Nome</option>
                        primeiroLoop = false;
                    }
                    else
                    {
                        <option value="@item.Livro!.Id" id="option@(item.Livro.Id)">@item.Livro.Nome</option>

                    }
                }
            </select>
        </p>

    }
    else
    {
        <p><input type="text" placeholder="Digite o Usuario" @bind="username" /></p>
        <p><a onclick="@escolher">Escolher</a></p>
        <p>
            <label>Livro:</label>
            <select @bind="exampleModel.LivroId">

                @foreach (var item in usuario.Assinatura)
                {
                    if (primeiroLoop)
                    {
                        <option value="@item.Livro!.Id" id="option@(item.Livro.Id)" selected>@item.Livro.Nome</option>
                        primeiroLoop = false;
                    }
                    else
                    {
                        <option value="@item.Livro!.Id" id="option@(item.Livro.Id)">@item.Livro.Nome</option>

                    }
                }
            </select>
        </p>
    }


    <p>
        <label>Story:</label>
        <select @bind="exampleModel.StoryId">
            @foreach (var item in lista)
            {
                <option value="@item.Id" id="option@(item.Id)">@item.CapituloComNome</option>
            }
        </select>
    </p>
    <p>
        <label>Camada:</label>
        <select  onchange="@((ChangeEventArgs e) => alterarCamada(e))" >

            <option value="camada1" >Camada 1</option>
            <option value="camada2" >Camada 2</option>
            <option value="camada3" >Camada 3</option>
            <option value="camada4" >Camada 4</option>
            <option value="camada5" >Camada 5</option>
            <option value="camada6" >Camada 6</option>
            <option value="camada7" >Camada 7</option>
            <option value="camada8" >Camada 8</option>
            <option value="camada9">Camada 9</option>

        </select>
    </p>
    <p>
        <label>Pasta (Opcional):</label>
        <select @bind="pasta">
            @if(exampleModel.StoryId != 0)
            {
                var lista = Filtro!.Where(sub => sub.StoryId == exampleModel.StoryId && sub.LivroId == exampleModel.LivroId).ToList();
                @foreach (var item in lista)
                {
                    var filtros = lista;
                    var fil = filtros!.First(f => f.Id == item.Id);
                    var pasta = filtros!.IndexOf(fil) + 1;
                    <option value="@item.Id">@item.Nome - pasta @pasta - @GetCamada(item) </option>

                }
            }
            else
            {
                var lista = Filtro!.Where(sub => sub.StoryId == exampleModel.StoryId && sub.LivroId == exampleModel.LivroId).ToList();
                @foreach (var item in lista)
                {     
                    var filtros = lista;
                    var fil = filtros!.First(f => f.Id == item.Id);
                    var pasta = filtros!.IndexOf(fil) + 1;
                    <option value="@item.Id">@item.Nome - pasta @pasta - @GetCamada(item) </option>

                }
            }            
        </select>
    </p>


    <button type="submit">Adicionar</button>
</EditForm>

@code {
    private Pagina? exampleModel;
    private int pasta { get; set; } = 0;
    private string camada { get; set; }
    private UserModel usuario;
    private bool EscolherUsuario;
    private string? username;
    private bool primeiroLoop = true;

    private List<Story> lista = new List<Story>();
    public List<Filtro> Filtro = new List<Filtro>();
    public List<Filtro> filtros = new List<Filtro>();

    private DemoContextFactory db = new DemoContextFactory();
    private ApplicationDbContext Context;

    protected override async Task OnInitializedAsync()
    {
        Context = db.CreateDbContext(null);
        Pagina.entity = true;
        exampleModel = new Pagina();
        Pagina.entity = false;
        lista = await Context.Story!
        .Where(str => str.Nome != "Padrao").ToListAsync();
        exampleModel.StoryId = lista.First().Id;
        Filtro = await Context.Filtro
        .ToListAsync();

        var authState = await AuthenticationStateProvider
       .GetAuthenticationStateAsync();
        var user = authState.User;

        usuario = Context.Users
       .Include(u => u.Assinatura)
       .ThenInclude(u => u.Livro)
       .First(u => u.UserName == user.Identity!.Name);

        if (await userManager.IsInRoleAsync(usuario, "Admin") || await userManager.IsInRoleAsync(usuario, "Manager"))
            EscolherUsuario = true;

    }

    private async void HandleSubmit()
    {
        var content = Context.Pagina.Where(c => c.StoryId == exampleModel.StoryId  && c.Html != null)
        .OrderBy(c => c.Id).LastOrDefault()!;
        var pag = await Context.Pagina.FirstOrDefaultAsync(str => str.Versiculo == content.Versiculo + 1);
        if(pag != null)
        {
            pag.Html = exampleModel.Html;
            Context.Update(pag);
            await Context.SaveChangesAsync();
            exampleModel = Context.Pagina!.Include(p => p.Filtro).First(f => f.Id == pag!.Id);
            filtros = await Context.Filtro
            .Where(f => f.LivroId == pag.LivroId)
            .OrderBy(f => f.Id)
            .ToListAsync();
            if(pasta != 0)
            {
                var fil = filtros.First(f => f.Id == pasta);
                setPastas(fil);
                Context.Update(exampleModel);
                Context.SaveChanges();
            }   
            navigation.NavigateTo("crud/pagina/1");

        }
    }

    protected async void setPastas(Filtro Model)
    {
        if (Model is SubStory)
        {
            exampleModel!.IncluiFiltro(Model);
        }

        if (Model is Grupo)
        {
            exampleModel!.IncluiFiltro(Model);
            var gr1 = (Grupo)Model;
            var subtory = Context.SubStory!.First(l => l.Id == gr1.SubStoryId);
            exampleModel!.IncluiFiltro(subtory);
        }

        if (Model is SubGrupo)
        {
            exampleModel!.IncluiFiltro(Model);
            var gr1 = (SubGrupo)Model;
            var grupo = Context.Grupo!.First(l => l.Id == gr1.GrupoId);
            exampleModel!.IncluiFiltro(grupo);
            var SubStory = Context.SubStory!.First(l => l.Id == grupo.SubStoryId);
            exampleModel!.IncluiFiltro(SubStory);
        }

        if (Model is SubSubGrupo)
        {
            exampleModel!.IncluiFiltro(Model);
            var gr1 = (SubSubGrupo)Model;
            var subgrupo = Context.SubGrupo!.First(l => l.Id == gr1.SubGrupoId);
            exampleModel!.IncluiFiltro(subgrupo);
            var grupo = Context.Grupo!.First(l => l.Id == subgrupo.GrupoId);
            exampleModel!.IncluiFiltro(grupo);
            var SubStory = Context.SubStory!.First(l => l.Id == grupo.SubStoryId);
            exampleModel!.IncluiFiltro(SubStory);
        }

        if (Model is CamadaSeis)
        {
            exampleModel!.IncluiFiltro(Model);
            var gr1 = (CamadaSeis)Model;
            var subsubgrupo = Context.SubSubGrupo!.First(l => l.Id == gr1.SubSubGrupoId);
            exampleModel!.IncluiFiltro(subsubgrupo);
            var subgrupo = Context.SubGrupo!.First(l => l.Id == subsubgrupo.SubGrupoId);
            exampleModel!.IncluiFiltro(subgrupo);
            var grupo = Context.Grupo!.First(l => l.Id == subgrupo.GrupoId);
            exampleModel!.IncluiFiltro(grupo);
            var SubStory = Context.SubStory!.First(l => l.Id == grupo.SubStoryId);
            exampleModel!.IncluiFiltro(SubStory);
        }

        if (Model is CamadaSete)
        {
            exampleModel!.IncluiFiltro(Model);
            var gr1 = (CamadaSete)Model;
            var camadaseis = Context.CamadaSeis!.First(l => l.Id == gr1.CamadaSeisId);
            exampleModel!.IncluiFiltro(camadaseis);
            var subsubgrupo = Context.SubSubGrupo!.First(l => l.Id == camadaseis.SubSubGrupoId);
            exampleModel!.IncluiFiltro(subsubgrupo);
            var subgrupo = Context.SubGrupo!.First(l => l.Id == subsubgrupo.SubGrupoId);
            exampleModel!.IncluiFiltro(subgrupo);
            var grupo = Context.Grupo!.First(l => l.Id == subgrupo.GrupoId);
            exampleModel!.IncluiFiltro(grupo);
            var SubStory = Context.SubStory!.First(l => l.Id == grupo.SubStoryId);
            exampleModel!.IncluiFiltro(SubStory);
        }

        if (Model is CamadaOito)
        {
            exampleModel!.IncluiFiltro(Model);
            var gr1 = (CamadaOito)Model;
            var camadasete = Context.CamadaSete!.First(l => l.Id == gr1.CamadaSeteId);
            exampleModel!.IncluiFiltro(camadasete);
            var camadaseis = Context.CamadaSeis!.First(l => l.Id == camadasete.CamadaSeisId);
            exampleModel!.IncluiFiltro(camadaseis);
            var subsubgrupo = Context.SubSubGrupo!.First(l => l.Id == camadaseis.SubSubGrupoId);
            exampleModel!.IncluiFiltro(subsubgrupo);
            var subgrupo = Context.SubGrupo!.First(l => l.Id == subsubgrupo.SubGrupoId);
            exampleModel!.IncluiFiltro(subgrupo);
            var grupo = Context.Grupo!.First(l => l.Id == subgrupo.GrupoId);
            exampleModel!.IncluiFiltro(grupo);
            var SubStory = Context.SubStory!.First(l => l.Id == grupo.SubStoryId);
            exampleModel!.IncluiFiltro(SubStory);
        }

        if (Model is CamadaNove)
        {
            exampleModel!.IncluiFiltro(Model);
            var gr1 = (CamadaNove)Model;
            var camadaoito = Context.CamadaOito!.First(l => l.Id == gr1.CamadaOitoId);
            exampleModel!.IncluiFiltro(camadaoito);
            var camadasete = Context.CamadaSete!.First(l => l.Id == camadaoito.CamadaSeteId);
            exampleModel!.IncluiFiltro(camadasete);
            var camadaseis = Context.CamadaSeis!.First(l => l.Id == camadasete.CamadaSeisId);
            exampleModel!.IncluiFiltro(camadaseis);
            var subsubgrupo = Context.SubSubGrupo!.First(l => l.Id == camadaseis.SubSubGrupoId);
            exampleModel!.IncluiFiltro(subsubgrupo);
            var subgrupo = Context.SubGrupo!.First(l => l.Id == subsubgrupo.SubGrupoId);
            exampleModel!.IncluiFiltro(subgrupo);
            var grupo = Context.Grupo!.First(l => l.Id == subgrupo.GrupoId);
            exampleModel!.IncluiFiltro(grupo);
            var SubStory = Context.SubStory!.First(l => l.Id == grupo.SubStoryId);
            exampleModel!.IncluiFiltro(SubStory);
        }

        if (Model is CamadaDez)
        {
            exampleModel!.IncluiFiltro(Model);
            var gr1 = (CamadaDez)Model;
            var camadanove = Context.CamadaNove!.First(l => l.Id == gr1.CamadaNoveId);
            exampleModel!.IncluiFiltro(camadanove);
            var camadaoito = Context.CamadaOito!.First(l => l.Id == camadanove.CamadaOitoId);
            exampleModel!.IncluiFiltro(camadaoito);
            var camadasete = Context.CamadaSete!.First(l => l.Id == camadaoito.CamadaSeteId);
            exampleModel!.IncluiFiltro(camadasete);
            var camadaseis = Context.CamadaSeis!.First(l => l.Id == camadasete.CamadaSeisId);
            exampleModel!.IncluiFiltro(camadaseis);
            var subsubgrupo = Context.SubSubGrupo!.First(l => l.Id == camadaseis.SubSubGrupoId);
            exampleModel!.IncluiFiltro(subsubgrupo);
            var subgrupo = Context.SubGrupo!.First(l => l.Id == subsubgrupo.SubGrupoId);
            exampleModel!.IncluiFiltro(subgrupo);
            var grupo = Context.Grupo!.First(l => l.Id == subgrupo.GrupoId);
            exampleModel!.IncluiFiltro(grupo);
            var SubStory = Context.SubStory!.First(l => l.Id == grupo.SubStoryId);
            exampleModel!.IncluiFiltro(SubStory);
        }
        Context.SaveChanges();
    }

    private string GetCamada(Filtro Model)
    {
        string result = "";
        if (Model is SubStory)
        {
            result += "camada 1";
        }

        if (Model is Grupo)
        {
            result += "camada 2";
        }

        if (Model is SubGrupo)
        {
            result += "camada 3";
        }

        if (Model is SubSubGrupo)
        {
            result += "camada 4";
        }

        if (Model is CamadaSeis)
        {
            result += "camada 5";
        }

        if (Model is CamadaSete)
        {
            result += "camada 6";
        }

        if (Model is CamadaOito)
        {
            result += "camada 7";
        }

        if (Model is CamadaNove)
        {
            result += "camada 8";
        }

        if (Model is CamadaDez)
        {
            result += "camada 9";
        }
        return result;
    }

    private async void alterarCamada(ChangeEventArgs e)
    {
        if (e.Value.ToString() == "camada1")
            Filtro =  Context.Filtro!.Where(f => f is SubStory && f.LivroId == exampleModel.LivroId).ToList();
        else if (e.Value.ToString() == "camada2")
            Filtro = Context.Filtro!.Where(f => f is Grupo && f.LivroId == exampleModel.LivroId).ToList();
        else if (e.Value.ToString() == "camada3")                       
            Filtro = Context.Filtro!.Where(f => f is SubGrupo && f.LivroId == exampleModel.LivroId).ToList();
        else if (e.Value.ToString() == "camada4")                      
            Filtro = Context.Filtro!.Where(f => f is SubSubGrupo && f.LivroId == exampleModel.LivroId).ToList();
        else if (e.Value.ToString() == "camada5")                       
            Filtro = Context.Filtro!.Where(f => f is CamadaSeis && f.LivroId == exampleModel.LivroId).ToList();
        else if (e.Value.ToString() == "camada6")                      
            Filtro = Context.Filtro!.Where(f => f is CamadaSete && f.LivroId == exampleModel.LivroId).ToList();
        else if (e.Value.ToString() == "camada7")                       
            Filtro = Context.Filtro!.Where(f => f is CamadaOito && f.LivroId == exampleModel.LivroId).ToList();
        else if (e.Value.ToString() == "camada8")                        
            Filtro = Context.Filtro!.Where(f => f is CamadaNove && f.LivroId == exampleModel.LivroId).ToList();
        else if (e.Value.ToString() == "camada9")                       
            Filtro = Context.Filtro!.Where(f => f is CamadaDez && f.LivroId == exampleModel.LivroId).ToList();

            if(Filtro.Count == 0)
            Filtro = Context.Filtro.ToList();

            Filtro = Filtro
            .ToList();
    }

    private void escolher()
    {
        usuario = Context.Users
       .Include(u => u.Assinatura)
       .ThenInclude(u => u.Livro)
       .First(u => u.UserName == username);
        primeiroLoop = true;
    }
}
