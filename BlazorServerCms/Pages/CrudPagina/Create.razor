@page "/pagina/create"
@inject NavigationManager navigation
@inject RepositoryPagina repositoryPagina
@inject AuthenticationStateProvider? AuthenticationStateProvider
@inject UserManager<UserModel> userManager
@inject IJSRuntime js
@attribute [Authorize(Roles = "Admin, Manager, Assinante")]

<Editor Id="contentextarea"
        Inline=false
        CloudChannel="5"
        Disable=false
        JsConfSrc="sample"
        ApiKey="m8nq39l31dv5y829ehcjsd0rciwei8crem0yubndhdgs72fd"
        ClassName="tinymce-wrapper" @bind-Value="exampleModel.Html" />

<EditForm Model="@exampleModel" OnSubmit="@HandleSubmit">
    <DataAnnotationsValidator />




    <ValidationSummary />
    <p>
        <label>Titulo:</label>
        <InputText id="Titulo" @bind-Value="exampleModel.Titulo"  />
    </p>


    @if (!EscolherUsuario && usuario != null)
    {

        <p>
            <label>Livro:</label>
            <select @bind="exampleModel.LivroId">

                @foreach (var item in usuario.Assinatura)
                {
                    if (primeiroLoop)
                    {
                        <option value="@item.Livro!.Id" id="option@(item.Livro.Id)" selected>@item.Livro.Nome</option>
                        primeiroLoop = false;
                    }
                    else
                    {
                        <option value="@item.Livro!.Id" id="option@(item.Livro.Id)">@item.Livro.Nome</option>

                    }
                }
            </select>
        </p>

    }
    else if (usuario != null)
    {
        <p><input type="text" placeholder="Digite o Usuario" @bind="username" /></p>
        <p><a onclick="@escolher">Escolher</a></p>
        <p>
            <label>Livro:</label>
            <select @bind="exampleModel.LivroId">

                @foreach (var item in usuario.Assinatura)
                {
                    if (primeiroLoop)
                    {
                        <option value="@item.Livro!.Id" id="option@(item.Livro.Id)" selected>@item.Livro.Nome</option>
                        primeiroLoop = false;
                    }
                    else
                    {
                        <option value="@item.Livro!.Id" id="option@(item.Livro.Id)">@item.Livro.Nome</option>

                    }
                }
            </select>
        </p>
    }


    <p>
        <label>Story:</label>
        <select @bind="exampleModel.StoryId">
            @foreach (var item in lista)
            {
                <option value="@item.Id" id="option@(item.Id)">@item.CapituloComNome</option>
            }
        </select>
    </p>
    <p>
        <label>Camada:</label>
        <select  onchange="@((ChangeEventArgs e) => alterarCamada(e))" >
            <option value="camada2">Camada 2</option>
            <option value="camada3">Camada 3</option>
            <option value="camada4">Camada 4</option>
            <option value="camada5">Camada 5</option>
            <option value="camada6">Camada 6</option>
            <option value="camada7">Camada 7</option>
            <option value="camada8">Camada 8</option>
            <option value="camada9">Camada 9</option>
            <option value="camada10">Camada 10</option>
        </select>
    </p>
    <p>
        <label>Pasta (Opcional):</label>
        <select @bind="pasta">
            @if(exampleModel.StoryId != 0)
            {
                var lista = Filtro!.Where(sub => sub.StoryId == exampleModel.StoryId && sub.LivroId == exampleModel.LivroId).ToList();
                @foreach (var item in lista)
                {
                    var filtros = lista;
                    var fil = filtros!.First(f => f.Id == item.Id);
                    var pasta = filtros!.IndexOf(fil) + 1;
                    if(item is SubStory)
                    {
                        SubStory sub = (SubStory)item;
                        if(sub.Grupo != null && sub.Grupo.Count == 0)
                        {
                            <option value="@item.Id">@item.Nome - pasta @pasta - ultima pasta </option>
                        }
                        else
                        {
                            <option value="@item.Id">@item.Nome - pasta @pasta - @GetCamada(item) </option>
                        }
                    }
                    else if(item is Grupo)
                    {
                        Grupo sub = (Grupo)item;
                        if (sub.SubGrupo != null && sub.SubGrupo.Count == 0)
                        {
                            <option value="@item.Id">@item.Nome - pasta @pasta - ultima pasta </option>
                        }
                        else
                        {
                            <option value="@item.Id">@item.Nome - pasta @pasta - @GetCamada(item) </option>
                        }
                    }
                    else if(item is SubGrupo)
                    {
                        SubGrupo sub = (SubGrupo)item;
                        if (sub.SubSubGrupo != null && sub.SubSubGrupo.Count == 0)
                        {
                            <option value="@item.Id">@item.Nome - pasta @pasta - ultima pasta </option>
                        }
                        else
                        {
                            <option value="@item.Id">@item.Nome - pasta @pasta - @GetCamada(item) </option>
                        }
                    }
                    else if(item is SubSubGrupo)
                    {
                        SubSubGrupo sub = (SubSubGrupo)item;
                        if (sub.CamadaSeis != null && sub.CamadaSeis.Count == 0)
                        {
                            <option value="@item.Id">@item.Nome - pasta @pasta - ultima pasta </option>
                        }
                        else
                        {
                            <option value="@item.Id">@item.Nome - pasta @pasta - @GetCamada(item) </option>
                        }
                    }
                    else if(item is CamadaSeis)
                    {
                        CamadaSeis sub = (CamadaSeis)item;
                        if (sub.CamadaSete != null && sub.CamadaSete.Count == 0)
                        {
                            <option value="@item.Id">@item.Nome - pasta @pasta - ultima pasta </option>
                        }
                        else
                        {
                            <option value="@item.Id">@item.Nome - pasta @pasta - @GetCamada(item) </option>
                        }
                    }
                    else if(item is CamadaSete)
                    {
                        CamadaSete sub = (CamadaSete)item;
                        if (sub.CamadaOito != null && sub.CamadaOito.Count == 0)
                        {
                            <option value="@item.Id">@item.Nome - pasta @pasta - ultima pasta </option>
                        }
                        else
                        {
                            <option value="@item.Id">@item.Nome - pasta @pasta - @GetCamada(item) </option>
                        }
                    }
                    else if(item is CamadaOito)
                    {
                        CamadaOito sub = (CamadaOito)item;
                        if (sub.CamadaNove != null && sub.CamadaNove.Count == 0)
                        {
                            <option value="@item.Id">@item.Nome - pasta @pasta - ultima pasta </option>
                        }
                        else
                        {
                            <option value="@item.Id">@item.Nome - pasta @pasta - @GetCamada(item) </option>
                        }
                    }
                    else if(item is CamadaNove)
                    {
                        CamadaNove sub = (CamadaNove)item;
                        if (sub.CamadaDez != null && sub.CamadaDez.Count == 0)
                        {
                            <option value="@item.Id">@item.Nome - pasta @pasta - ultima pasta </option>
                        }
                        else
                        {
                            <option value="@item.Id">@item.Nome - pasta @pasta - @GetCamada(item) </option>
                        }
                    }
                    else
                    {
                        <option value="@item.Id">@item.Nome - pasta @pasta - ultima pasta </option>
                    }
                    
                }
            }
            else
            {
                var lista = Filtro!.Where(sub => sub.StoryId == exampleModel.StoryId && sub.LivroId == exampleModel.LivroId).ToList();
                @foreach (var item in lista)
                {     
                    var filtros = lista;
                    var fil = filtros!.First(f => f.Id == item.Id);
                    var pasta = filtros!.IndexOf(fil) + 1;
                    if (item is SubStory)
                    {
                        SubStory sub = (SubStory)item;
                        if (sub.Grupo != null && sub.Grupo.Count == 0)
                        {
                            <option value="@item.Id">@item.Nome - pasta @pasta - ultima pasta </option>
                        }
                        else
                        {
                            <option value="@item.Id">@item.Nome - pasta @pasta - @GetCamada(item) </option>
                        }
                    }
                    else if (item is Grupo)
                    {
                        Grupo sub = (Grupo)item;
                        if (sub.SubGrupo != null && sub.SubGrupo.Count == 0)
                        {
                            <option value="@item.Id">@item.Nome - pasta @pasta - ultima pasta </option>
                        }
                        else
                        {
                            <option value="@item.Id">@item.Nome - pasta @pasta - @GetCamada(item) </option>
                        }
                    }
                    else if (item is SubGrupo)
                    {
                        SubGrupo sub = (SubGrupo)item;
                        if (sub.SubSubGrupo != null && sub.SubSubGrupo.Count == 0)
                        {
                            <option value="@item.Id">@item.Nome - pasta @pasta - ultima pasta </option>
                        }
                        else
                        {
                            <option value="@item.Id">@item.Nome - pasta @pasta - @GetCamada(item) </option>
                        }
                    }
                    else if (item is SubSubGrupo)
                    {
                        SubSubGrupo sub = (SubSubGrupo)item;
                        if (sub.CamadaSeis != null && sub.CamadaSeis.Count == 0)
                        {
                            <option value="@item.Id">@item.Nome - pasta @pasta - ultima pasta </option>
                        }
                        else
                        {
                            <option value="@item.Id">@item.Nome - pasta @pasta - @GetCamada(item) </option>
                        }
                    }
                    else if (item is CamadaSeis)
                    {
                        CamadaSeis sub = (CamadaSeis)item;
                        if (sub.CamadaSete != null && sub.CamadaSete.Count == 0)
                        {
                            <option value="@item.Id">@item.Nome - pasta @pasta - ultima pasta </option>
                        }
                        else
                        {
                            <option value="@item.Id">@item.Nome - pasta @pasta - @GetCamada(item) </option>
                        }
                    }
                    else if (item is CamadaSete)
                    {
                        CamadaSete sub = (CamadaSete)item;
                        if (sub.CamadaOito != null && sub.CamadaOito.Count == 0)
                        {
                            <option value="@item.Id">@item.Nome - pasta @pasta - ultima pasta </option>
                        }
                        else
                        {
                            <option value="@item.Id">@item.Nome - pasta @pasta - @GetCamada(item) </option>
                        }
                    }
                    else if (item is CamadaOito)
                    {
                        CamadaOito sub = (CamadaOito)item;
                        if (sub.CamadaNove != null && sub.CamadaNove.Count == 0)
                        {
                            <option value="@item.Id">@item.Nome - pasta @pasta - ultima pasta </option>
                        }
                        else
                        {
                            <option value="@item.Id">@item.Nome - pasta @pasta - @GetCamada(item) </option>
                        }
                    }
                    else if (item is CamadaNove)
                    {
                        CamadaNove sub = (CamadaNove)item;
                        if (sub.CamadaDez != null && sub.CamadaDez.Count == 0)
                        {
                            <option value="@item.Id">@item.Nome - pasta @pasta - ultima pasta </option>
                        }
                        else
                        {
                            <option value="@item.Id">@item.Nome - pasta @pasta - @GetCamada(item) </option>
                        }
                    }
                    else
                    {
                        <option value="@item.Id">@item.Nome - pasta @pasta - ultima pasta </option>
                    }

                }
            }            
        </select>
    </p>


    <button type="submit">Adicionar</button>
</EditForm>

@code {
    private Pagina? exampleModel;
    private int pasta { get; set; } = 0;
    private string camada { get; set; } = "";
    private UserModel usuario = null;
    private bool EscolherUsuario;
    private string? username;
    private bool primeiroLoop = true;

    private List<Story> lista = new List<Story>();
    public List<Filtro> Filtro = new List<Filtro>();
    public List<Filtro> filtros = new List<Filtro>();

    private DemoContextFactory db = new DemoContextFactory();
    private ApplicationDbContext Context = null;

    protected override async Task OnInitializedAsync()
    {
        Context = db.CreateDbContext(null);
        Pagina.entity = true;
        exampleModel = new Pagina();
        Pagina.entity = false;
        lista = await Context.Story!
        .Where(str => str.Nome != "Padrao").ToListAsync();
        exampleModel.StoryId = lista.First().Id;
        Filtro = await Context.Filtro!
        .ToListAsync();

        exampleModel.LivroId = null;

        var authState = await AuthenticationStateProvider
       .GetAuthenticationStateAsync();
        var user = authState.User;

        usuario = Context.Users
       .Include(u => u.Assinatura)
       .ThenInclude(u => u.Livro)
       .First(u => u.UserName == user.Identity!.Name);

        if (await userManager.IsInRoleAsync(usuario, "Admin") || await userManager.IsInRoleAsync(usuario, "Manager"))
            EscolherUsuario = true;

    }

    private async void HandleSubmit()
    {
        var content = Context.Pagina.Where(c => c.StoryId == exampleModel.StoryId  &&
            c.Html != null && c.LivroId == exampleModel.LivroId)
        .OrderBy(c => c.Id).LastOrDefault()!;
        var pag = await Context.Pagina.FirstOrDefaultAsync(str => str.Versiculo == content.Versiculo + 1);
        if(pag != null)
        {
            pag.Html = exampleModel.Html;            
            filtros = await Context.Filtro!
            .Include(f => f.Pagina)!
            .ThenInclude(f => f.Content)
            .Where(f => f.LivroId == exampleModel.LivroId)
            .OrderBy(f => f.Id)
            .ToListAsync();
            var fil = filtros.FirstOrDefault(f => f.Id == pasta);

            if (fil != null && await setPastas(fil))
            {
                Context.Update(pag);
                await Context.SaveChangesAsync();
                exampleModel = Context.Pagina!.Include(p => p.Filtro).First(f => f.Id == pag!.Id);
                Context.Update(exampleModel);
                Context.SaveChanges();
                navigation.NavigateTo("crud/pagina/1");
            }   
        }
    }

    protected async Task<bool> setPastas(Filtro Model)
    {
        if(await verificarFiltro(Model))
        {
            if(Model.Pagina.FirstOrDefault(p => p.Content is Chave) != null)
            {
                if (Model is SubStory)
                {
                    exampleModel!.IncluiFiltro(Model);
                }

                if (Model is Grupo)
                {
                    exampleModel!.IncluiFiltro(Model);
                    var gr1 = (Grupo)Model;
                    var subtory = Context.SubStory!.First(l => l.Id == gr1.SubStoryId);
                    exampleModel!.IncluiFiltro(subtory);
                }

                if (Model is SubGrupo)
                {
                    exampleModel!.IncluiFiltro(Model);
                    var gr1 = (SubGrupo)Model;
                    var grupo = Context.Grupo!.First(l => l.Id == gr1.GrupoId);
                    exampleModel!.IncluiFiltro(grupo);
                    var SubStory = Context.SubStory!.First(l => l.Id == grupo.SubStoryId);
                    exampleModel!.IncluiFiltro(SubStory);
                }

                if (Model is SubSubGrupo)
                {
                    exampleModel!.IncluiFiltro(Model);
                    var gr1 = (SubSubGrupo)Model;
                    var subgrupo = Context.SubGrupo!.First(l => l.Id == gr1.SubGrupoId);
                    exampleModel!.IncluiFiltro(subgrupo);
                    var grupo = Context.Grupo!.First(l => l.Id == subgrupo.GrupoId);
                    exampleModel!.IncluiFiltro(grupo);
                    var SubStory = Context.SubStory!.First(l => l.Id == grupo.SubStoryId);
                    exampleModel!.IncluiFiltro(SubStory);
                }

                if (Model is CamadaSeis)
                {
                    exampleModel!.IncluiFiltro(Model);
                    var gr1 = (CamadaSeis)Model;
                    var subsubgrupo = Context.SubSubGrupo!.First(l => l.Id == gr1.SubSubGrupoId);
                    exampleModel!.IncluiFiltro(subsubgrupo);
                    var subgrupo = Context.SubGrupo!.First(l => l.Id == subsubgrupo.SubGrupoId);
                    exampleModel!.IncluiFiltro(subgrupo);
                    var grupo = Context.Grupo!.First(l => l.Id == subgrupo.GrupoId);
                    exampleModel!.IncluiFiltro(grupo);
                    var SubStory = Context.SubStory!.First(l => l.Id == grupo.SubStoryId);
                    exampleModel!.IncluiFiltro(SubStory);
                }

                if (Model is CamadaSete)
                {
                    exampleModel!.IncluiFiltro(Model);
                    var gr1 = (CamadaSete)Model;
                    var camadaseis = Context.CamadaSeis!.First(l => l.Id == gr1.CamadaSeisId);
                    exampleModel!.IncluiFiltro(camadaseis);
                    var subsubgrupo = Context.SubSubGrupo!.First(l => l.Id == camadaseis.SubSubGrupoId);
                    exampleModel!.IncluiFiltro(subsubgrupo);
                    var subgrupo = Context.SubGrupo!.First(l => l.Id == subsubgrupo.SubGrupoId);
                    exampleModel!.IncluiFiltro(subgrupo);
                    var grupo = Context.Grupo!.First(l => l.Id == subgrupo.GrupoId);
                    exampleModel!.IncluiFiltro(grupo);
                    var SubStory = Context.SubStory!.First(l => l.Id == grupo.SubStoryId);
                    exampleModel!.IncluiFiltro(SubStory);
                }

                if (Model is CamadaOito)
                {
                    exampleModel!.IncluiFiltro(Model);
                    var gr1 = (CamadaOito)Model;
                    var camadasete = Context.CamadaSete!.First(l => l.Id == gr1.CamadaSeteId);
                    exampleModel!.IncluiFiltro(camadasete);
                    var camadaseis = Context.CamadaSeis!.First(l => l.Id == camadasete.CamadaSeisId);
                    exampleModel!.IncluiFiltro(camadaseis);
                    var subsubgrupo = Context.SubSubGrupo!.First(l => l.Id == camadaseis.SubSubGrupoId);
                    exampleModel!.IncluiFiltro(subsubgrupo);
                    var subgrupo = Context.SubGrupo!.First(l => l.Id == subsubgrupo.SubGrupoId);
                    exampleModel!.IncluiFiltro(subgrupo);
                    var grupo = Context.Grupo!.First(l => l.Id == subgrupo.GrupoId);
                    exampleModel!.IncluiFiltro(grupo);
                    var SubStory = Context.SubStory!.First(l => l.Id == grupo.SubStoryId);
                    exampleModel!.IncluiFiltro(SubStory);
                }

                if (Model is CamadaNove)
                {
                    exampleModel!.IncluiFiltro(Model);
                    var gr1 = (CamadaNove)Model;
                    var camadaoito = Context.CamadaOito!.First(l => l.Id == gr1.CamadaOitoId);
                    exampleModel!.IncluiFiltro(camadaoito);
                    var camadasete = Context.CamadaSete!.First(l => l.Id == camadaoito.CamadaSeteId);
                    exampleModel!.IncluiFiltro(camadasete);
                    var camadaseis = Context.CamadaSeis!.First(l => l.Id == camadasete.CamadaSeisId);
                    exampleModel!.IncluiFiltro(camadaseis);
                    var subsubgrupo = Context.SubSubGrupo!.First(l => l.Id == camadaseis.SubSubGrupoId);
                    exampleModel!.IncluiFiltro(subsubgrupo);
                    var subgrupo = Context.SubGrupo!.First(l => l.Id == subsubgrupo.SubGrupoId);
                    exampleModel!.IncluiFiltro(subgrupo);
                    var grupo = Context.Grupo!.First(l => l.Id == subgrupo.GrupoId);
                    exampleModel!.IncluiFiltro(grupo);
                    var SubStory = Context.SubStory!.First(l => l.Id == grupo.SubStoryId);
                    exampleModel!.IncluiFiltro(SubStory);
                }

                if (Model is CamadaDez)
                {
                    exampleModel!.IncluiFiltro(Model);
                    var gr1 = (CamadaDez)Model;
                    var camadanove = Context.CamadaNove!.First(l => l.Id == gr1.CamadaNoveId);
                    exampleModel!.IncluiFiltro(camadanove);
                    var camadaoito = Context.CamadaOito!.First(l => l.Id == camadanove.CamadaOitoId);
                    exampleModel!.IncluiFiltro(camadaoito);
                    var camadasete = Context.CamadaSete!.First(l => l.Id == camadaoito.CamadaSeteId);
                    exampleModel!.IncluiFiltro(camadasete);
                    var camadaseis = Context.CamadaSeis!.First(l => l.Id == camadasete.CamadaSeisId);
                    exampleModel!.IncluiFiltro(camadaseis);
                    var subsubgrupo = Context.SubSubGrupo!.First(l => l.Id == camadaseis.SubSubGrupoId);
                    exampleModel!.IncluiFiltro(subsubgrupo);
                    var subgrupo = Context.SubGrupo!.First(l => l.Id == subsubgrupo.SubGrupoId);
                    exampleModel!.IncluiFiltro(subgrupo);
                    var grupo = Context.Grupo!.First(l => l.Id == subgrupo.GrupoId);
                    exampleModel!.IncluiFiltro(grupo);
                    var SubStory = Context.SubStory!.First(l => l.Id == grupo.SubStoryId);
                    exampleModel!.IncluiFiltro(SubStory);
                }
                Context.SaveChanges();
                return true;
            }
            else
            {
                await js!.InvokeAsync<object>("DarAlert", "Você precisa criar uma chave para essa pasta");
                navigation.NavigateTo($"/addchave/{Model.Id}");
                return false;
            }

        }
        else
        {
            await js!.InvokeAsync<object>("DarAlert", "Só é possivel adicionar versiculos na ultima pasta");
            return false;
        }


    }

    private string GetCamada(Filtro Model)
    {
        string result = "";
        if (Model is SubStory)
        {
            result += "camada 2";
        }

        if (Model is Grupo)
        {
            result += "camada 3";
        }

        if (Model is SubGrupo)
        {
            result += "camada 4";
        }

        if (Model is SubSubGrupo)
        {
            result += "camada 5";
        }

        if (Model is CamadaSeis)
        {
            result += "camada 6";
        }

        if (Model is CamadaSete)
        {
            result += "camada 7";
        }

        if (Model is CamadaOito)
        {
            result += "camada 8";
        }

        if (Model is CamadaNove)
        {
            result += "camada 9";
        }

        if (Model is CamadaDez)
        {
            result += "camada 10";
        }
        return result;
    }

    private void alterarCamada(ChangeEventArgs e)
    {
        Filtro.Clear();

        if (e.Value.ToString() == "camada2")
           Filtro.AddRange( Context.SubStory!.Include(Sub => Sub.Grupo).Where(f => f.LivroId == exampleModel!.LivroId).ToList());
        else if (e.Value.ToString() == "camada3")
            Filtro.AddRange(Context.Grupo!.Include(Sub => Sub.SubGrupo).Where(f => f.LivroId == exampleModel!.LivroId).ToList());
        else if (e.Value.ToString() == "camada4")
            Filtro.AddRange(Context.SubGrupo!.Include(Sub => Sub.SubSubGrupo).Where(f => f.LivroId == exampleModel!.LivroId).ToList());
        else if (e.Value.ToString() == "camada5")
            Filtro.AddRange(Context.SubSubGrupo!.Include(Sub => Sub.CamadaSeis).Where(f => f.LivroId == exampleModel!.LivroId).ToList());
        else if (e.Value.ToString() == "camada6")
            Filtro.AddRange(Context.CamadaSeis!.Include(Sub => Sub.CamadaSete).Where(f => f.LivroId == exampleModel!.LivroId).ToList());
        else if (e.Value.ToString() == "camada7")
            Filtro.AddRange(Context.CamadaSete!.Include(Sub => Sub.CamadaOito).Where(f => f.LivroId == exampleModel!.LivroId).ToList());
        else if (e.Value.ToString() == "camada8")
            Filtro.AddRange(Context.CamadaOito!.Include(Sub => Sub.CamadaNove).Where(f => f.LivroId == exampleModel!.LivroId).ToList());
        else if (e.Value.ToString() == "camada9")
            Filtro.AddRange(Context.CamadaNove!.Include(Sub => Sub.CamadaDez).Where(f => f.LivroId == exampleModel!.LivroId).ToList());
        else if (e.Value.ToString() == "camada10")
            Filtro.AddRange(Context!.CamadaDez!.Where(f =>  f.LivroId == exampleModel!.LivroId).ToList());

        if(Filtro.Count == 0)
            Filtro = Context!.Filtro.Where(f => f.LivroId == exampleModel!.LivroId).ToList();

        Filtro = Filtro
        .ToList();
    }

    private void escolher()
    {
        usuario = Context.Users
       .Include(u => u.Assinatura)
       .ThenInclude(u => u.Livro)
       .First(u => u.UserName == username);
        primeiroLoop = true;
    }

    private async Task<bool> verificarFiltro(Filtro fil)
    {
        if (fil is SubStory)
        {
            var filtro = await Context.SubStory!.Include(f => f.Grupo).FirstAsync(f => f.Id == fil.Id);
            if (filtro.Grupo != null && filtro.Grupo.Count > 0)
                return false;
            else return true;
        }
        else
        if (fil is Grupo)
        {
            var filtro = await Context.Grupo!.Include(f => f.SubGrupo).FirstAsync(f => f.Id == fil.Id);
            if (filtro.SubGrupo != null && filtro.SubGrupo.Count > 0)
                return false;
            else return true;
        }
        else
        if (fil is SubGrupo)
        {
            var filtro = await Context.SubGrupo!.Include(f => f.SubSubGrupo).FirstAsync(f => f.Id == fil.Id);
            if (filtro.SubSubGrupo != null && filtro.SubSubGrupo.Count > 0)
                return false;
            else return true;
        }
        else
        if (fil is SubSubGrupo)
        {
            var filtro = await Context.SubSubGrupo!.Include(f => f.CamadaSeis).FirstAsync(f => f.Id == fil.Id);
            if (filtro.CamadaSeis != null && filtro.CamadaSeis.Count > 0)
                return false;
            else return true;
        }
        else
        if (fil is CamadaSeis)
        {
            var filtro = await Context.CamadaSeis!.Include(f => f.CamadaSete).FirstAsync(f => f.Id == fil.Id);
            if (filtro.CamadaSete != null && filtro.CamadaSete.Count > 0)
                return false;
            else return true;
        }
        else
        if (fil is CamadaSete)
        {
            var filtro = await Context.CamadaSete!.Include(f => f.CamadaOito).FirstAsync(f => f.Id == fil.Id);
            if (filtro.CamadaOito != null && filtro.CamadaOito.Count > 0)
                return false;
            else return true;
        }
        else
        if (fil is CamadaOito)
        {
            var filtro = await Context.CamadaOito!.Include(f => f.CamadaNove).FirstAsync(f => f.Id == fil.Id);
            if (filtro.CamadaNove != null && filtro.CamadaNove.Count > 0)
                return false;
            else return true;
        }
        else
        if (fil is CamadaNove)
        {
            var filtro = await Context.CamadaNove!.Include(f => f.CamadaDez).FirstAsync(f => f.Id == fil.Id);
            if (filtro.CamadaDez != null && filtro.CamadaDez.Count > 0)
                return false;
            else return true;
        }

        return true;
    }
}
