@page "/pagina/create"
@inject NavigationManager navigation
@inject RepositoryPagina repositoryPagina
@attribute [Authorize(Roles = "Admin")]

<Editor Id="contentextarea"
        Inline=false
        CloudChannel="5"
        Disable=false
        JsConfSrc="sample"
        ApiKey="m8nq39l31dv5y829ehcjsd0rciwei8crem0yubndhdgs72fd"
        ClassName="tinymce-wrapper" @bind-Value="exampleModel.ContentUser" />

<EditForm Model="@exampleModel" OnSubmit="@HandleSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <p>
        <label>Titulo:</label>
        <InputText id="Titulo" @bind-Value="exampleModel.Titulo" />
    </p>
    <p>
        <label>Story:</label>
        <select @bind="exampleModel.StoryId">
            @foreach (var item in lista)
            {
                <option value="@item.Id" id="option@(item.Id)">@item.CapituloComNome</option>
            }
        </select>
    </p>
    <p>
        <label>Pasta (Opcional):</label>
        <select @bind="pasta">
            @if(exampleModel.StoryId != 0)
            {
                @foreach (var item in Filtro!.Where(sub => sub.StoryId == exampleModel.StoryId))
                {
                        var filtros = item.Story!.Filtro;
                        var fil = filtros!.First(f => f.Id == item.Id);
                        var pasta = filtros!.IndexOf(fil) + 1;
                        <option value="@item.Id">@item.Nome - pasta @pasta - @GetCamada(item) </option>

                }
            }
            else
            {
                @foreach (var item in Filtro!.Where(sub => sub.StoryId == lista.First().Id))
                {     
                        var filtros = item.Story!.Filtro;
                        var fil = filtros!.First(f => f.Id == item.Id);
                        var pasta = filtros!.IndexOf(fil) + 1;
                        <option value="@item.Id">@item.Nome - pasta @pasta - @GetCamada(item) </option>

                }
            }            
        </select>
    </p>
   

    <button type="submit">Adicionar</button>
</EditForm>

@code {
    private Pagina exampleModel = new();
    public int pasta { get; set; } = 0;

    private List<Story> lista = new List<Story>();
    public List<Filtro> Filtro = new List<Filtro>();

    protected override async Task OnInitializedAsync()
    {
        lista = await repositoryPagina!.Context.Story!
        .Where(str => str.Nome != "Padrao").ToListAsync();
        exampleModel.StoryId = lista.First().Id;
        Filtro = await repositoryPagina!.Context.Filtro!.Include(f => f.Story)

        .OrderBy(f => f.CamadaDezId)
        .OrderBy(f => f.CamadaNoveId)
        .OrderBy(f => f.CamadaOitoId)
        .OrderBy(f => f.CamadaSeteId)
        .OrderBy(f => f.CamadaSeisId)
        .OrderBy(f => f.SubSubGrupoId)
        .OrderBy(f => f.SubGrupoId)
        .OrderBy(f => f.GrupoId)
        .OrderBy(f => f.SubStoryId)
        .ToListAsync();
    }

    private async void HandleSubmit()
    {
        if(pasta != 0)
        {
            var fil = Filtro.First(f => f.Id == pasta);
            setPastas(fil);
        }      

        await repositoryPagina!.Context.AddAsync(exampleModel);
        await repositoryPagina!.Context.SaveChangesAsync();
        navigation.NavigateTo("pagina");
    }

    protected async void setPastas(Filtro Model)
    {
        if (Model.SubStoryId != null)
        {
            exampleModel.SubStoryId = Model.SubStoryId;
        }

        if (Model.GrupoId != null)
        {
            var grupo = await repositoryPagina!.Context.Grupo!.FirstAsync(l => l.Id == exampleModel.GrupoId);
            exampleModel.SubStoryId = grupo.SubStoryId;
        }

        if (Model.SubGrupoId != null)
        {
            var subgrupo = await repositoryPagina!.Context.SubGrupo!.FirstAsync(l => l.Id == exampleModel.SubGrupoId);
            exampleModel.GrupoId = subgrupo.GrupoId;
            var grupo = await repositoryPagina!.Context.Grupo!.FirstAsync(l => l.Id == exampleModel.GrupoId);
            exampleModel.SubStoryId = grupo.SubStoryId;
        }

        if (Model.SubSubGrupoId != null)
        {
            var subsubgrupo = await repositoryPagina!.Context.SubSubGrupo!.FirstAsync(l => l.Id == exampleModel.SubSubGrupoId);
            exampleModel.SubGrupoId = subsubgrupo.SubGrupoId;
            var subgrupo = await repositoryPagina!.Context.SubGrupo!.FirstAsync(l => l.Id == exampleModel.SubGrupoId);
            exampleModel.GrupoId = subgrupo.GrupoId;
            var grupo = await repositoryPagina!.Context.Grupo!.FirstAsync(l => l.Id == exampleModel.GrupoId);
            exampleModel.SubStoryId = grupo.SubStoryId;
        }

        if (Model.CamadaSeisId != null)
        {
            var camadaseis = await repositoryPagina!.Context.CamadaSeis!.FirstAsync(l => l.Id == exampleModel.CamadaSeisId);
            exampleModel.SubSubGrupoId = camadaseis.SubSubGrupoId;
            var subsubgrupo = await repositoryPagina!.Context.SubSubGrupo!.FirstAsync(l => l.Id == exampleModel.SubSubGrupoId);
            exampleModel.SubGrupoId = subsubgrupo.SubGrupoId;
            var subgrupo = await repositoryPagina!.Context.SubGrupo!.FirstAsync(l => l.Id == exampleModel.SubGrupoId);
            exampleModel.GrupoId = subgrupo.GrupoId;
            var grupo = await repositoryPagina!.Context.Grupo!.FirstAsync(l => l.Id == exampleModel.GrupoId);
            exampleModel.SubStoryId = grupo.SubStoryId;
        }

        if (Model.CamadaSeteId != null)
        {
            var camadasete = await repositoryPagina!.Context.CamadaSete!.FirstAsync(l => l.Id == exampleModel.CamadaSeteId);
            exampleModel.CamadaSeisId = camadasete.CamadaSeisId;
            var camadaseis = await repositoryPagina!.Context.CamadaSeis!.FirstAsync(l => l.Id == exampleModel.CamadaSeisId);
            exampleModel.SubSubGrupoId = camadaseis.SubSubGrupoId;
            var subsubgrupo = await repositoryPagina!.Context.SubSubGrupo!.FirstAsync(l => l.Id == exampleModel.SubSubGrupoId);
            exampleModel.SubGrupoId = subsubgrupo.SubGrupoId;
            var subgrupo = await repositoryPagina!.Context.SubGrupo!.FirstAsync(l => l.Id == exampleModel.SubGrupoId);
            exampleModel.GrupoId = subgrupo.GrupoId;
            var grupo = await repositoryPagina!.Context.Grupo!.FirstAsync(l => l.Id == exampleModel.GrupoId);
            exampleModel.SubStoryId = grupo.SubStoryId;
        }

        if (Model.CamadaOitoId != null)
        {
            var camadaoito = await repositoryPagina!.Context.CamadaOito!.FirstAsync(l => l.Id == exampleModel.CamadaOitoId);
            exampleModel.CamadaSeteId = camadaoito.CamadaSeteId;
            var camadasete = await repositoryPagina!.Context.CamadaSete!.FirstAsync(l => l.Id == exampleModel.CamadaSeteId);
            exampleModel.CamadaSeisId = camadasete.CamadaSeisId;
            var camadaseis = await repositoryPagina!.Context.CamadaSeis!.FirstAsync(l => l.Id == exampleModel.CamadaSeisId);
            exampleModel.SubSubGrupoId = camadaseis.SubSubGrupoId;
            var subsubgrupo = await repositoryPagina!.Context.SubSubGrupo!.FirstAsync(l => l.Id == exampleModel.SubSubGrupoId);
            exampleModel.SubGrupoId = subsubgrupo.SubGrupoId;
            var subgrupo = await repositoryPagina!.Context.SubGrupo!.FirstAsync(l => l.Id == exampleModel.SubGrupoId);
            exampleModel.GrupoId = subgrupo.GrupoId;
            var grupo = await repositoryPagina!.Context.Grupo!.FirstAsync(l => l.Id == exampleModel.GrupoId);
            exampleModel.SubStoryId = grupo.SubStoryId;
        }

        if (Model.CamadaNoveId != null)
        {
            var camadanove = await repositoryPagina!.Context.CamadaNove!.FirstAsync(l => l.Id == exampleModel.CamadaNoveId);
            exampleModel.CamadaOitoId = camadanove.CamadaOitoId;
            var camadaoito = await repositoryPagina!.Context.CamadaOito!.FirstAsync(l => l.Id == exampleModel.CamadaOitoId);
            exampleModel.CamadaSeteId = camadaoito.CamadaSeteId;
            var camadasete = await repositoryPagina!.Context.CamadaSete!.FirstAsync(l => l.Id == exampleModel.CamadaSeteId);
            exampleModel.CamadaSeisId = camadasete.CamadaSeisId;
            var camadaseis = await repositoryPagina!.Context.CamadaSeis!.FirstAsync(l => l.Id == exampleModel.CamadaSeisId);
            exampleModel.SubSubGrupoId = camadaseis.SubSubGrupoId;
            var subsubgrupo = await repositoryPagina!.Context.SubSubGrupo!.FirstAsync(l => l.Id == exampleModel.SubSubGrupoId);
            exampleModel.SubGrupoId = subsubgrupo.SubGrupoId;
            var subgrupo = await repositoryPagina!.Context.SubGrupo!.FirstAsync(l => l.Id == exampleModel.SubGrupoId);
            exampleModel.GrupoId = subgrupo.GrupoId;
            var grupo = await repositoryPagina!.Context.Grupo!.FirstAsync(l => l.Id == exampleModel.GrupoId);
            exampleModel.SubStoryId = grupo.SubStoryId;
        }

        if (Model.CamadaDezId != null)
        {
            var camadadez = await repositoryPagina!.Context.CamadaDez!.FirstAsync(l => l.Id == exampleModel.CamadaDezId);
            exampleModel.CamadaNoveId = camadadez.CamadaNoveId;
            var camadanove = await repositoryPagina!.Context.CamadaNove!.FirstAsync(l => l.Id == exampleModel.CamadaNoveId);
            exampleModel.CamadaOitoId = camadanove.CamadaOitoId;
            var camadaoito = await repositoryPagina!.Context.CamadaOito!.FirstAsync(l => l.Id == exampleModel.CamadaOitoId);
            exampleModel.CamadaSeteId = camadaoito.CamadaSeteId;
            var camadasete = await repositoryPagina!.Context.CamadaSete!.FirstAsync(l => l.Id == exampleModel.CamadaSeteId);
            exampleModel.CamadaSeisId = camadasete.CamadaSeisId;
            var camadaseis = await repositoryPagina!.Context.CamadaSeis!.FirstAsync(l => l.Id == exampleModel.CamadaSeisId);
            exampleModel.SubSubGrupoId = camadaseis.SubSubGrupoId;
            var subsubgrupo = await repositoryPagina!.Context.SubSubGrupo!.FirstAsync(l => l.Id == exampleModel.SubSubGrupoId);
            exampleModel.SubGrupoId = subsubgrupo.SubGrupoId;
            var subgrupo = await repositoryPagina!.Context.SubGrupo!.FirstAsync(l => l.Id == exampleModel.SubGrupoId);
            exampleModel.GrupoId = subgrupo.GrupoId;
            var grupo = await repositoryPagina!.Context.Grupo!.FirstAsync(l => l.Id == exampleModel.GrupoId);
            exampleModel.SubStoryId = grupo.SubStoryId;
        }
    }

    protected string GetCamada(Filtro Model)
    {
        string result = "";
        if (Model.SubStoryId != null)
        {
            result += "camada 1";
        }

        if (Model.GrupoId != null)
        {
            result += "camada 2";
        }

        if (Model.SubGrupoId != null)
        {
            result += "camada 3";
        }

        if (Model.SubSubGrupoId != null)
        {
            result += "camada 4";
        }

        if (Model.CamadaSeisId != null)
        {
            result += "camada 5";
        }

        if (Model.CamadaSeteId != null)
        {
            result += "camada 6";
        }

        if (Model.CamadaOitoId != null)
        {
            result += "camada 7";
        }

        if (Model.CamadaNoveId != null)
        {
            result += "camada 8";
        }

        if (Model.CamadaDezId != null)
        {
            result += "camada 9";
        }
        return result;
    }
}
