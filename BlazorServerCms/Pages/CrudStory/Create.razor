@page "/story/create"
@inject NavigationManager navigation
@inject RepositoryPagina repositoryPagina
@inject IWebHostEnvironment Environment
@attribute [Authorize(Roles = "Admin")]

<EditForm Model="@exampleModel" OnSubmit="@HandleSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <p>
        <label>Nome:</label>
        <InputText id="Nome" @bind-Value="exampleModel.Nome" />
    </p>
    <p>
        <label>Imagem (512 x 512):</label>
        <InputFile OnChange="@LoadFiles"  />
    </p>
    <p>
        <input type="checkbox" checked="@exampleModel.Produto" /> Para produtos
    </p>
    

    <button type="submit">Adicionar</button>
</EditForm>

@code {
    private Story exampleModel = new();
    private DemoContextFactory db = new DemoContextFactory();
    private ApplicationDbContext Context;
    private long maxFileSize = 1024 * 800;
    private IBrowserFile file = null;

    protected override void OnInitialized()
    {
        Context = db.CreateDbContext(null);
    }

    private async void HandleSubmit()
    {
        var list = await Context.Story!.Where(p => p.Nome != "Padrao").ToListAsync();
        exampleModel.PaginaPadraoLink = list.Count + 1;
        if(file != null)
        exampleModel.Image = file.Name;
        await Context.AddAsync(exampleModel);
        await Context.SaveChangesAsync();

        var conteudo = "<p> <h1> Seja bem vindo a Story " + exampleModel.Nome + "</h1> </p>";

        Pagina pag = null;
        Pagina.entity = true;
        if(exampleModel.Produto)
            pag = new Pagina()
            {
                Data = DateTime.Now,
                Titulo = "Story - " + exampleModel.Nome,
                StoryId = exampleModel.Id,
                Content = conteudo,
                    Classificacao = new Classificacao()
            };
        else
            pag = new Pagina()
                {
                    Data = DateTime.Now,
                    Titulo = "Story - " + exampleModel.Nome,
                    StoryId = exampleModel.Id,
                    ContentUser = conteudo,
                    Classificacao = new Classificacao()
                };
        Pagina.entity = false;

        Context.Add(pag);
        Context.SaveChanges();

        var Story = await Context.Story!.FirstAsync(st => st.Nome == "Padrao");

        var pagina = new Pagina()
            {
                Data = DateTime.Now,
                Titulo = "Story - " + exampleModel.Nome,
                StoryId = Story.Id,
                Content = "<a href='#' id='LinkPadrao'> <h1> Story " + exampleModel.Nome + "</h1> </a>",
                Classificacao = new Classificacao()
            };

        try
        {
            Context.Add(pagina);
            Context.SaveChanges();
        }
        catch (Exception ex)
        {
            Console.WriteLine(ex.Message);
        }
        if(file != null)
        {
            var path = Path.Combine(Environment.ContentRootPath, "wwwroot", "ImgStory", "cap." + exampleModel.PaginaPadraoLink + "." + file.Name);
            await using FileStream fs = new(path, FileMode.Create);
            await file.OpenReadStream(maxFileSize).CopyToAsync(fs);            
        }
        navigation.NavigateTo("/crud/story/1");
    }

    private void LoadFiles(InputFileChangeEventArgs e)
    {
        file = e.File;        
    }
}
