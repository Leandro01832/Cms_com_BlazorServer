@page "/substory/edit/{Id:long}"
@inject NavigationManager navigation
@inject RepositoryPagina repositoryPagina
@attribute [Authorize(Roles = "Admin")]

<EditForm Model="@exampleModel" OnSubmit="@HandleSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
   
    <p>
        <label>Nome:</label>
        <InputText id="Nome" @bind-Value="exampleModel.Nome" />
    </p>
    <label>Story:</label>
    <select @bind="exampleModel.StoryId">
        @foreach (var item in lista)
        {
            <option value="@item.Id" id="option@(item.Id)">@item.Nome</option>
        }
    </select>
   

    <button type="submit">Alterar</button>
</EditForm>

@code {
    private Filtro exampleModel = new();
    private List<Story> lista = new List<Story>();
    private DemoContextFactory db = new DemoContextFactory();
    private ApplicationDbContext Context;

    [Parameter]public long Id{ get; set; }

    protected async override Task OnParametersSetAsync()
    {
        Context = db.CreateDbContext(null);
        exampleModel = await Context.Filtro!.FirstAsync(l => l.Id == Id);
        lista = await Context.Story!
        .Where(str => str.Nome != "Padrao").ToListAsync();
        
    }

    private async void HandleSubmit()
    {
        Context.Update(exampleModel);
        await Context.SaveChangesAsync();
        navigation.NavigateTo("crud/substory");
        // Process the form
    }
}

