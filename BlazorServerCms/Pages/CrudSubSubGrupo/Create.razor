@page "/subsubgrupo/create"
@inject NavigationManager navigation
@inject RepositoryPagina repositoryPagina
@attribute [Authorize(Roles = "Admin")]

<EditForm Model="@exampleModel" OnSubmit="@HandleSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <p>
        <label>Nome:</label>
        <InputText id="Nome" @bind-Value="exampleModel.Nome" />
    </p>
    <p>
        <label>Story:</label>
        <select @bind="StoryId">
            @foreach (var item in lista)
            {
                <option value="@item.Id" id="option@(item.Id)">@item.Nome</option>
            }
        </select>
    </p>
    <p>
        <label>Sub-Story:</label>
        <select @bind="SubStoryId">
            @foreach (var item in SubStory!.Where(sub => sub.StoryId == StoryId))
            {
                <option value="@item.Id" id="option@(item.Id)">@item.Nome</option>
            }
        </select>
    </p>
    <p>
        <label>Grupo:</label>
        <select @bind="GrupoId">
            @foreach (var item in Grupo!.Where(sub => sub.SubStoryId == SubStoryId))
            {
                <option value="@item.Id" id="option@(item.Id)">@item.Nome</option>
            }
        </select>
    </p>
    <p>
        <label>Sub-Grupo:</label>
        <select @bind="exampleModel.SubGrupoId">
            @foreach (var item in SubGrupo!.Where(sub => sub.GrupoId == GrupoId))
            {
                <option value="@item.Id" id="option@(item.Id)">@item.Nome</option>
            }
        </select>
    </p>
   
   

    <button type="submit">Adicionar</button>
</EditForm>

@code {
    private SubSubGrupo exampleModel = new();

    long StoryId = 0;
    long SubStoryId = 0;
    long GrupoId = 0;
    private List<Story> lista = new List<Story>();
    public List<SubStory> SubStory = new List<SubStory>();
    public List<Grupo> Grupo = new List<Grupo>();
    public List<SubGrupo> SubGrupo = new List<SubGrupo>();
    private DemoContextFactory db = new DemoContextFactory();
    private ApplicationDbContext Context;

    protected override async Task OnInitializedAsync()
    {
        Context = db.CreateDbContext(null);
        lista = await Context.Story!
        .Where(str => str.Nome != "Padrao").ToListAsync();
        StoryId = lista.First().Id;
        SubStory = await Context.SubStory!.ToListAsync();
        Grupo = await Context.Grupo!.ToListAsync();
        SubGrupo = await Context.SubGrupo!.ToListAsync();
    }

    private async void HandleSubmit()
    {
        var filtro = new Filtro
            {
                SubSubGrupo = exampleModel,
                Nome = exampleModel.Nome,
                StoryId = StoryId,
                Rotas = exampleModel.Nome + ", "
            };
        await Context.AddAsync(filtro);
        await Context.SaveChangesAsync();
        filtro.SubSubGrupoId = filtro.Id;
        Context.Update(filtro);
        await Context.SaveChangesAsync();
        navigation.NavigateTo("crud/subsubgrupo");
    }
}
