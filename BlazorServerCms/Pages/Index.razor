@page "/"
@page "/acesso-pastas/{pasta1:int}/{pasta2:int}/{pasta3:int}/{pasta4:int}{pasta5:int}/{pasta6:int}/{pasta7:int}/{pasta8:int}/{pasta9:int}/{pasta10:int}"
@page "/acesso-pastas/{pasta1:int}/{pasta2:int}/{pasta3:int}/{pasta4:int}{pasta5:int}/{pasta6:int}/{pasta7:int}/{pasta8:int}/{pasta9:int}"
@page "/acesso-pastas/{pasta1:int}/{pasta2:int}/{pasta3:int}/{pasta4:int}{pasta5:int}/{pasta6:int}/{pasta7:int}/{pasta8:int}"
@page "/acesso-pastas/{pasta1:int}/{pasta2:int}/{pasta3:int}/{pasta4:int}{pasta5:int}/{pasta6:int}/{pasta7:int}"
@page "/acesso-pastas/{pasta1:int}/{pasta2:int}/{pasta3:int}/{pasta4:int}{pasta5:int}/{pasta6:int}"
@page "/acesso-pastas/{pasta1:int}/{pasta2:int}/{pasta3:int}/{pasta4:int}{pasta5:int}"
@page "/acesso-pastas/{pasta1:int}/{pasta2:int}/{pasta3:int}/{pasta4:int}"
@page "/acesso-pastas/{pasta1:int}/{pasta2:int}/{pasta3:int}"
@page "/acesso-pastas/{pasta1:int}/{pasta2:int}"
@page "/acesso-pastas/{pasta1:int}"
@page "/info/{dominio}/{compartilhante}/{compartilhante2}"
@page "/{capitulo:int}/{filtrar:int}"
@page "/{compartilhante2}/{filtrar:int}"
@page "/{capitulo:int}/{indice}"
@page "/acesso/{indice}"
@page "/{filtrar:int}"
@page "/preferencia/{filtrar:int}/{p1:int}"
@page "/pref/{filtrar:int}/{p1:int}"
@page "/pref/{filtrar:int}/{p1:int}/{p2:int}"
@page "/pref/{filtrar:int}/{p1:int}/{p2:int}/{p3:int}"
@page "/pref/{filtrar:int}/{p1:int}/{p2:int}/{p3:int}/{p4:int}"
@page "/pref/{filtrar:int}/{p1:int}/{p2:int}/{p3:int}/{p4:int}/{p5:int}"
@page "/pref/{filtrar:int}/{p1:int}/{p2:int}/{p3:int}/{p4:int}/{p5:int}/{p6:int}"
@page "/pref/{filtrar:int}/{p1:int}/{p2:int}/{p3:int}/{p4:int}/{p5:int}/{p6:int}/{p7:int}"
@page "/pref/{filtrar:int}/{p1:int}/{p2:int}/{p3:int}/{p4:int}/{p5:int}/{p6:int}/{p7:int}/{p8:int}"
@page "/pref/{filtrar:int}/{p1:int}/{p2:int}/{p3:int}/{p4:int}/{p5:int}/{p6:int}/{p7:int}/{p8:int}/{p9:int}"
@page "/pref/{filtrar:int}/{p1:int}/{p2:int}/{p3:int}/{p4:int}/{p5:int}/{p6:int}/{p7:int}/{p8:int}/{p9:int}/{p10:int}"
@page "/form/{Capitulo:int}/{filtrar:int}/{dominio}/{compartilhante}/{compartilhante2}/{p1:int}"
@page "/form/{Capitulo:int}/{filtrar:int}/{dominio}/{compartilhante}/{compartilhante2}/{p1:int}/{p2:int}"
@page "/form/{Capitulo:int}/{filtrar:int}/{dominio}/{compartilhante}/{compartilhante2}/{p1:int}/{p2:int}/{p3:int}"
@page "/form/{Capitulo:int}/{filtrar:int}/{dominio}/{compartilhante}/{compartilhante2}/{p1:int}/{p2:int}/{p3:int}/{p4:int}"
@page "/form/{Capitulo:int}/{filtrar:int}/{dominio}/{compartilhante}/{compartilhante2}/{p1:int}/{p2:int}/{p3:int}/{p4:int}/{p5:int}"
@page "/form/{Capitulo:int}/{filtrar:int}/{dominio}/{compartilhante}/{compartilhante2}/{p1:int}/{p2:int}/{p3:int}/{p4:int}/{p5:int}/{p6:int}"
@page "/form/{Capitulo:int}/{filtrar:int}/{dominio}/{compartilhante}/{compartilhante2}/{p1:int}/{p2:int}/{p3:int}/{p4:int}/{p5:int}/{p6:int}/{p7:int}"
@page "/form/{Capitulo:int}/{filtrar:int}/{dominio}/{compartilhante}/{compartilhante2}/{p1:int}/{p2:int}/{p3:int}/{p4:int}/{p5:int}/{p6:int}/{p7:int}/{p8:int}"
@page "/form/{Capitulo:int}/{filtrar:int}/{dominio}/{compartilhante}/{compartilhante2}/{p1:int}/{p2:int}/{p3:int}/{p4:int}/{p5:int}/{p6:int}/{p7:int}/{p8:int}/{p9:int}"
@page "/form/{Capitulo:int}/{filtrar:int}/{dominio}/{compartilhante}/{compartilhante2}/{p1:int}/{p2:int}/{p3:int}/{p4:int}/{p5:int}/{p6:int}/{p7:int}/{p8:int}/{p9:int}/{p10:int}"
@page "/mensagem/{MensagemSistema}"
@using business.business;



@inject NavigationManager navigation
@inject RepositoryPagina repositoryPagina
@inject UserManager<IdentityUser> userManager
@inject IJSRuntime js

<PageTitle>Instagleo</PageTitle>

<h3>@Mensagem</h3>



@if (MensagemSistema != null)
{
    <h3>@MensagemSistema</h3>    
}   

<p style="font-family: 'League Script', cursive; font-size:large;">
    A beleza da vida se multiplica cada vez Que a gente partilha com alguém que a gente ama.
    Se você quiser multiplicar a vida Você precisa dividí-la.
</p>
    
 <div class="container">
     <input type="text" @bind="Query"  placeholder="Nº do capitulo ou o nome" />
    <a id="acessoPaginaComInput2" href="#" onclick="@buscar"
       class="btn btn-primary">
        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
            <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z" />
        </svg>
    </a>     
 </div>

@if(filtros!.Count > 0)
{
    <div>
        <table>
            <tr>
                <th>Capitulo</th>
                <th>Resultado</th>
                <th></th>
            </tr>
            @foreach (var item in filtros!)
            {
                <tr>
                    <td>Capitulo @repositoryPagina.paginas!.First(p => p.StoryId == item.StoryId).Story!.PaginaPadraoLink </td>
                    <td>@item.Nome</td>
                    <td><a href="#" onclick="@(() => Acessar(item))">Acessar</a></td>
                </tr>
            }

        </table>
    </div>
}
<img src="/story.jpg" width="800" />

    <a href="#" onclick="@(() => navigation.NavigateTo($"/comentario/0/1"))"
   style="background-color:rgb(208, 146, 61); font-size:large;color:rgb(95, 56, 23);">
        Compartilhe seu comentário
    </a>


@code{
    [Parameter] public int? pasta1 { get; set; }
    [Parameter] public int? pasta2 { get; set; }
    [Parameter] public int? pasta3 { get; set; }
    [Parameter] public int? pasta4 { get; set; }
    [Parameter] public int? pasta5 { get; set; }
    [Parameter] public int? pasta6 { get; set; }
    [Parameter] public int? pasta7 { get; set; }
    [Parameter] public int? pasta8 { get; set; }
    [Parameter] public int? pasta9 { get; set; }
    [Parameter] public int? pasta10 { get; set; }


    [Parameter] public int? capitulo { get; set; }
    [Parameter] public int? p1 { get; set; }
    [Parameter] public int? p2 { get; set; }
    [Parameter] public int? p3 { get; set; }
    [Parameter] public int? p4 { get; set; }
    [Parameter] public int? p5 { get; set; }
    [Parameter] public int? p6 { get; set; }
    [Parameter] public int? p7 { get; set; }
    [Parameter] public int? p8 { get; set; }
    [Parameter] public int? p9 { get; set; }
    [Parameter] public int? p10 { get; set; }
    [Parameter] public string? indice { get; set; }
    [Parameter] public int? filtrar { get; set; }
    [Parameter] public string? MensagemSistema { get; set; }
    [Parameter] public string? dominio { get; set; }
    [Parameter] public string? compartilhante { get; set; }
    [Parameter] public string? compartilhante2 { get; set; }
    public string? Query { get; set; }
    List<Filtro>? filtros = new List<Filtro>();
    int cap = 1;
    string? Mensagem { get; set; }
    private DemoContextFactory db = new DemoContextFactory();
    private ApplicationDbContext Context;

    private string erro1 = "Voce ainda não esta compartilhando nenhum livro";

    protected override async Task OnInitializedAsync()
    {
        Context = db.CreateDbContext(null);
        var livro = await Context.Livro!.FirstOrDefaultAsync(l => l.Compartilhando);
        if (compartilhante == null)        
            compartilhante = repositoryPagina.buscarAdmin();
        if(dominio == null)
            dominio = repositoryPagina.buscarDominio();

        else if (dominio != repositoryPagina.buscarDominio())
        {
            var domi = await Context.Compartilhante!.FirstOrDefaultAsync(l => l.Livro == dominio);
            if (domi == null)
            {
                var compartilhant = new business.Compartilhante
                    {
                        Livro = dominio,
                        Admin = compartilhante,
                        Data = DateTime.Now,
                        Comissao = 5
                        // ComissaoParaUser = 0.25 * Comissao,
                       // Desconto = 0.5 * Comissao
                    };
                await Context.AddAsync(compartilhant);
                await Context.SaveChangesAsync();
            }
        }

        if(compartilhante2 == null)
        {
            compartilhante2 = "userEmail";
        }
        else
        {
            var usuarioCompartilhante = userManager.Users.First(u => u.UserName == compartilhante2);
            if (usuarioCompartilhante == null)
                compartilhante2 = "userEmail";
        }


        if (capitulo != null && indice != null && indice.Contains("verso"))
        {
            navigation.NavigateTo($"/renderizar/{capitulo}/{indice.Replace("verso-", "")}/1/11/1/{dominio}/{compartilhante}/{compartilhante2}");
        }
        else if (capitulo != null && filtrar != null)
        {
            navigation.NavigateTo($"/filtro/{capitulo}/pasta-{filtrar}/{dominio}/{compartilhante}/{compartilhante2}/0/0/0/0/0/0/0/0/0/0/1");
        }        
        else if (indice != null)
        { 
            var number = Regex.Match(indice, @"d+").Value;
            if (livro != null)
                navigation.ToAbsoluteUri($"{livro.url}/renderizar/{livro.Capitulo}/{number}/1/11/1/{dominio}/{compartilhante}/{compartilhante2}");
            else
                Mensagem = erro1;
        }
        else if (filtrar != null)
        {
            if (livro != null)
                navigation.ToAbsoluteUri($"{livro.url}/filtro/{livro.Capitulo}/pasta-{filtrar}/{dominio}/{compartilhante}/{compartilhante2}/0/0/0/0/0/0/0/0/0/0");
            else
                Mensagem = erro1;
        }
        else if (capitulo != null && p1 != null)
        {
            if (p10 != null)
                navigation.NavigateTo($"/formulario/1/teste/1/11/20/{dominio}/{compartilhante}/{compartilhante2}/{capitulo}/{filtrar}/{p1}/{p2}/{p3}/{p4}/{p5}/{p6}/{p7}/{p8}/{p9}/{p10}");
            else if (p9 != null)
                navigation.NavigateTo($"/formulario/1/teste/1/11/20/{dominio}/{compartilhante}/{compartilhante2}/{capitulo}/{filtrar}/{p1}/{p2}/{p3}/{p4}/{p5}/{p6}/{p7}/{p8}/{p9}/0");               
            else if (p8 != null)
                navigation.NavigateTo($"/formulario/1/teste/1/11/20/{dominio}/{compartilhante}/{compartilhante2}/{capitulo}/{filtrar}/{p1}/{p2}/{p3}/{p4}/{p5}/{p6}/{p7}/{p8}/0/0");               
            else if (p7 != null)
                navigation.NavigateTo($"/formulario/1/teste/1/11/20/{dominio}/{compartilhante}/{compartilhante2}/{capitulo}/{filtrar}/{p1}/{p2}/{p3}/{p4}/{p5}/{p6}/{p7}/0/0/0");               
            else if (p6 != null)
                navigation.NavigateTo($"/formulario/1/teste/1/11/20/{dominio}/{compartilhante}/{compartilhante2}/{capitulo}/{filtrar}/{p1}/{p2}/{p3}/{p4}/{p5}/{p6}/0/0/0/0");               
            else if (p5 != null)
                navigation.NavigateTo($"/formulario/1/teste/1/11/20/{dominio}/{compartilhante}/{compartilhante2}/{capitulo}/{filtrar}/{p1}/{p2}/{p3}/{p4}/{p5}/0/0/0/0/0");                
            else if (p4 != null)
                navigation.NavigateTo($"/formulario/1/teste/1/11/20/{dominio}/{compartilhante}/{compartilhante2}/{capitulo}/{filtrar}/{p1}/{p2}/{p3}/{p4}/0/0/0/0/0/0");                
            else if (p3 != null)
                navigation.NavigateTo($"/formulario/1/teste/1/11/20/{dominio}/{compartilhante}/{compartilhante2}/{capitulo}/{filtrar}/{p1}/{p2}/{p3}/0/0/0/0/0/0/0");                
            else if (p2 != null)
                navigation.NavigateTo($"/formulario/1/teste/1/11/20/{dominio}/{compartilhante}/{compartilhante2}/{capitulo}/{filtrar}/{p1}/{p2}/0/0/0/0/0/0/0/0");                            
            else if (p1 != null)
                navigation.NavigateTo($"/formulario/1/teste/1/11/20/{dominio}/{compartilhante}/{compartilhante2}/{capitulo}/{filtrar}/{p1}/0/0/0/0/0/0/0/0/0");
        }
        else if (p10 != null)
        {

            if (livro != null)
                navigation.ToAbsoluteUri($"{livro.url}/lista-filtro/1/teste/1/11/20/{dominio}/{compartilhante}/{compartilhante2}/{capitulo}/{filtrar}/{p1}/{p2}/{p3}/{p4}/{p5}/{p6}/{p7}/{p8}/{p9}/{p10}");
            else
                Mensagem = erro1;
        }
        else if (p9 != null)
        {
            if (livro != null)
                navigation.ToAbsoluteUri($"{livro.url}/lista-filtro/1/teste/1/11/20/{dominio}/{compartilhante}/{compartilhante2}/{capitulo}/{filtrar}/{p1}/{p2}/{p3}/{p4}/{p5}/{p6}/{p7}/{p8}/{p9}/0");
            else
                Mensagem = erro1;
        }
        else if (p8 != null)
        {
            if (livro != null)
                navigation.ToAbsoluteUri($"{livro.url}/lista-filtro/1/teste/1/11/20/{dominio}/{compartilhante}/{compartilhante2}/{capitulo}/{filtrar}/{p1}/{p2}/{p3}/{p4}/{p5}/{p6}/{p7}/{p8}/0/0");
            else
                Mensagem = erro1;
        }
        else if (p7 != null)
        {
            if (livro != null)
                navigation.ToAbsoluteUri($"{livro.url}/lista-filtro/1/teste/1/11/20/{dominio}/{compartilhante}/{compartilhante2}/{capitulo}/{filtrar}/{p1}/{p2}/{p3}/{p4}/{p5}/{p6}/{p7}/0/0/0");
            else
                Mensagem = erro1;
        }
        else if (p6 != null)
        {
            if (livro != null)
                navigation.ToAbsoluteUri($"{livro.url}/lista-filtro/1/teste/1/11/20/{dominio}/{compartilhante}/{compartilhante2}/{capitulo}/{filtrar}/{p1}/{p2}/{p3}/{p4}/{p5}/{p6}/0/0/0/0");
            else
                Mensagem = erro1;
        }
        else if (p5 != null)
        {
            if (livro != null)
                navigation.ToAbsoluteUri($"{livro.url}/lista-filtro/1/teste/1/11/20/{dominio}/{compartilhante}/{compartilhante2}/{capitulo}/{filtrar}/{p1}/{p2}/{p3}/{p4}/{p5}/0/0/0/0/0");
            else
                Mensagem = erro1;
        }
        else if (p4 != null)
        {
            if (livro != null)
                navigation.ToAbsoluteUri($"{livro.url}/lista-filtro/1/teste/1/11/20/{dominio}/{compartilhante}/{compartilhante2}/{capitulo}/{filtrar}/{p1}/{p2}/{p3}/{p4}/0/0/0/0/0/0");
            else
                Mensagem = erro1;
        }
        else if (p3 != null)
        {
            if (livro != null)
                navigation.ToAbsoluteUri($"{livro.url}/lista-filtro/1/teste/1/11/20/{dominio}/{compartilhante}/{compartilhante2}/{capitulo}/{filtrar}/{p1}/{p2}/{p3}/0/0/0/0/0/0/0");
            else
                Mensagem = erro1;
        }
        else if (p2 != null)
        {
            if (livro != null)
                navigation.ToAbsoluteUri($"{livro.url}/lista-filtro/1/teste/1/11/20/{dominio}/{compartilhante}/{compartilhante2}/{capitulo}/{filtrar}/{p1}/{p2}/0/0/0/0/0/0/0/0");
            else
                Mensagem = erro1;
        }
        else if (p1 != null)
        {
            if (livro != null)
                navigation.ToAbsoluteUri($"{livro.url}/lista-filtro/1/teste/1/11/20/{dominio}/{compartilhante}/{compartilhante2}/{capitulo}/{filtrar}/{p1}/0/0/0/0/0/0/0/0/0");
            else
                Mensagem = erro1;
        }
        else if (compartilhante2 != null && filtrar != null)
        {
            if (livro != null)
                navigation.ToAbsoluteUri($"{livro.url}/filtro/{livro.Capitulo}/pasta-{filtrar}/{dominio}/{compartilhante}/{compartilhante2}/0/0/0/0/0/0/0/0/0/0");
            else
                Mensagem = erro1;
        }
        else if (pasta1 != null)
        {
            int? pastaAcessada = null;
            UserBook? livroCompartilhado = await Context.UserBook.Include(u => u.Livro).FirstOrDefaultAsync(u => u.user == repositoryPagina.buscarAdmin());

            if (pastaAcessada != null && pastaAcessada != 0 && livroCompartilhado != null)
            {
                string url = $"{livroCompartilhado!.Livro!.url}/lista-filtro/1/teste/1/11/30/{livroCompartilhado!.Capitulo}/{pasta1}/{repositoryPagina.buscarAdmin()}/0/{pasta1}/{pasta2}/{pasta3}/{pasta4}/{pasta5}/{pasta6}/{pasta7}/{pasta8}/{pasta9}/{pasta10}";
                await js!.InvokeAsync<object>("AcessarSites", url);
            }
        }

       
    }

    private void Acessar(Filtro item)
    {
        var cap = repositoryPagina.paginas!.First(p => p.StoryId == item.StoryId).Story!.PaginaPadraoLink;
        var filtros = repositoryPagina.paginas!.First(p => p.StoryId == item.StoryId).Story!.Filtro;
        var fil = filtros!.First(f => f.Id == item.Id);
        var indiceFiltro = filtros!.IndexOf(fil) + 1;
        navigation.NavigateTo($"/filtro/{cap}/pasta-{indiceFiltro}/{dominio}/{compartilhante}/{compartilhante2}/1");
    }

    private async void buscar()
    {
        try
        {
            cap = int.Parse(Query!);
            navigation.NavigateTo($"/renderizar/{cap}/1/1/11/1/{dominio}/{compartilhante}/{compartilhante2}");
        }
        catch(Exception ex)
        {
            if (!string.IsNullOrEmpty(Query) && repositoryPagina.paginas!.Count == repositoryPagina.buscarCount())
            {
                filtros = await Context.Filtro!
                .Include(f => f.Story)
                .Where(f => f.Rotas!.ToLower().Contains(Query!.ToLower())).ToListAsync();

                if(filtros.Count == 0)
                {
                    var rota = new Rota
                        {
                            Nome = Query,
                            Registrado = false
                        };
                        Context.Add(rota);
                        await Context.SaveChangesAsync();
                }
            }
            cap = 1;
        }
    }

   
}