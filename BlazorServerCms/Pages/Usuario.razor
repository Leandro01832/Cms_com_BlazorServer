@page "/{user}"
@page "/{user}/{instante:int}"
@inject UserManager<IdentityUser> userManager
@inject RepositoryPagina? repositoryPagina
@inject IJSRuntime? js 
@inject NavigationManager navigation
<h3>Usuario</h3>

@if (instante != null)
{
    <PageTitle>Instante @instante </PageTitle>

}
else
{
    <PageTitle>Usuario</PageTitle>

}

@if(livroCompartilhado == null)
{
    <h4>Usuario @user não está compartilhando nenhum livro</h4>
}
else
{
    var preferences = Context.UserPreferences.FirstOrDefault(u => u.user == user && u.capitulo == livroCompartilhado.Capitulo && u.pasta == pasta);
    <label>Nº da pasta</label>
    <input type="text" @bind="pasta" placeholder="Nº da pasta" />
    if(preferences != null)
    {
        <a href="#" onclick="@(() => navigation.ToAbsoluteUri($"{livroCompartilhado.url}/filtro/{livroCompartilhado.Capitulo}/pasta-{pasta}/0/0/{repositoryPagina!.buscarDominio()}/{repositoryPagina!.buscarAdmin()}/{user}/{preferences.p1}/{preferences.p2}/{preferences.p3}/{preferences.p4}/{preferences.p5}/{preferences.p6}/{preferences.p7}/{preferences.p8}/{preferences.p9}/{preferences.p10}"))"
           class="btn btn-primary">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
                <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z" />
            </svg>
        </a>
    }
    else
    {
        <a href="#" onclick="@(() => navigation.ToAbsoluteUri($"{livroCompartilhado.url}/filtro/{livroCompartilhado.Capitulo}/pasta-{pasta}/0/0/{repositoryPagina!.buscarDominio()}/{repositoryPagina!.buscarAdmin()}/{user}/0/0/0/0/0/0/0/0/0/0"))"
           class="btn btn-primary">
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-search" viewBox="0 0 16 16">
                <path d="M11.742 10.344a6.5 6.5 0 1 0-1.397 1.398h-.001c.03.04.062.078.098.115l3.85 3.85a1 1 0 0 0 1.415-1.414l-3.85-3.85a1.007 1.007 0 0 0-.115-.1zM12 6.5a5.5 5.5 0 1 1-11 0 5.5 5.5 0 0 1 11 0z" />
            </svg>
        </a>
    }
}

<p>
    <a href="/user-book/livros-compartilhados/@user" class="btn btn-dark">
        Livros Compartilhados
    </a>
</p>

@if(caps != null)
for(var i = 1; i <= caps.Length; i++)
{
    <p>Capitulo @i</p>
    foreach (var item in filtros.Where(f => f.Story!.PaginaPadraoLink == i).ToList())
    {
            var filtrs = Context.Pagina!.Include(p => p.Story).ThenInclude(p => p.Filtro)
                .Where(p => p.StoryId == item.StoryId).First().Story!.Filtro!;
        var fil = filtrs.First(f => f.Id == item.Id);
        var pasta = filtrs.OrderBy(f => f.Id).ToList().IndexOf(fil) + 1;
       
        <div>
            <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" class="bi bi-bookmark" viewBox="0 0 16 16">
                <path d="M2 2a2 2 0 0 1 2-2h8a2 2 0 0 1 2 2v13.5a.5.5 0 0 1-.777.416L8 13.101l-5.223 2.815A.5.5 0 0 1 2 15.5V2zm2-1a1 1 0 0 0-1 1v12.566l4.723-2.482a.5.5 0 0 1 .554 0L13 14.566V2a1 1 0 0 0-1-1H4z" />
            </svg>
            <span> Pasta @pasta</span>
        </div>
        
    }
    <hr />
}


@code {
    [Parameter] public string user { get; set; }
    [Parameter] public int? instante { get; set; }
    private DemoContextFactory db = new DemoContextFactory();
    private ApplicationDbContext Context;
    private List<Filtro> filtros = new List<Filtro>();
    private LivroUser? livroCompartilhado = null;
    private int pasta;
    int[] caps = null;

    protected override async Task OnParametersSetAsync()
    {
        livroCompartilhado = await Context.LivroUser.FirstOrDefaultAsync(u => u.user == user);

        var folders = await Context.savedFolder.Where(s => s.user == user).ToListAsync();
        foreach(var item in folders)
            filtros.Add(await Context.Filtro!
                .Include(f => f.Story)
                .FirstAsync(f => f.Id == item.FiltroId));

        var stories = await Context.Story!.Where(st => st.Nome != "Padrao").ToListAsync();
        caps = new int[stories.Count];
    }

    protected override async Task OnInitializedAsync()
    {
        Context = db.CreateDbContext(null);

        if (instante != null)
        {
            List<InstanteUser>? instantes = await Context.InstanteUser.Include(i => i.Livros)
            .Where(i => i.Livros.FirstOrDefault(l => l.user == user) != null)
            .OrderBy(l => l.Id).ToListAsync();

            var objInstante = instantes.Skip((int)instante - 1).FirstOrDefault();


            if (objInstante != null)
            {
                List<LivroUser> livros = objInstante.Livros.OrderBy(l => l.Id).ToList();
                string url = "";
                for (var i = 0; i < livros.Count; i++)
                {
                    var ad = repositoryPagina.buscarAdmin();
                    var preferences = await Context.UserPreferences.FirstOrDefaultAsync(u => u.user == ad && u.capitulo == livros[i].Capitulo && u.pasta == livros[i].Pasta);
                    if(preferences != null)
                        url = $"{livros[i].url}/filtro/{livros[i].Capitulo}/pasta-{livros[i].Pasta}/0/{i + 1}/0/{repositoryPagina!.buscarDominio()}/{ad}/{user}/{preferences.p1}/{preferences.p2}/{preferences.p3}/{preferences.p4}/{preferences.p5}/{preferences.p6}/{preferences.p7}/{preferences.p8}/{preferences.p9}/{preferences.p10}";
                    else
                    url = $"{livros[i].url}/filtro/{livros[i].Capitulo}/pasta-{livros[i].Pasta}/0/{i + 1}/0/{repositoryPagina!.buscarDominio()}/{ad}/{user}/0/0/0/0/0/0/0/0/0/0";
                    await js!.InvokeAsync<object>("AcessarSites", url);     

                }


            }
        }
    }
}
