@inject IJSRuntime js
@inject NavigationManager navigation
@inject RepositoryPagina repositoryPagina

<div class="stories">

    <div id="carouselIndicators" bs-pause="false">

        <div class="carousel-inner">

            @if(array != null)
                for (var i = 0; i < array.Length; i++)
                {
                    @if (i == 0)
                    {

                        <div class="carousel-item ativo">

                            @foreach (var item in array[i])
                            {

                                <div class="story">
                                    <h6>
                                        <a onclick="@(() => navigation.NavigateTo($"/{item.UserName}"))">
                                            <div class="circuloNewStory">

                                                <div class="circulo4">
                                                    <div class="circulo5">

                                                        @if (item != null && item.Image != null)
                                                        {
                                                            <img src="ImgUser/usuario-@(item.UserName)-@(item.Image)" class="ImgUser">
                                                        }
                                                        else
                                                        {
                                                            <img src="ImgUser/padrao.jpg" class="ImgUser">

                                                        }


                                                    </div>
                                                </div>
                                            </div>
                                            <div class="desc">

                                            @if (aoVivo)
                                            {
                                                    <div class="aovivo">
                                                        <p  > Ao Vivo</p>
                                                    </div>
                                                <p>@descUser(item.UserName)</p>
                                            }
                                            else
                                            {
                                                <p> @descUser(item.UserName) </p>

                                            }
                                            </div>
                                        </a>
                                    </h6>
                                </div>

                            }

                        </div>
                    }
                    else
                    {
                        <div class="carousel-item">

                            @foreach (var item in array[i])
                            {

                                <div class="story" title="A descrição da story esta aqui!!!">
                                    <h6>
                                        <a onclick="@(() => navigation.NavigateTo($"/{item.UserName}"))">

                                            <div class="circulo">
                                                <div class="circulo2">                                               
                                                   
                                                    
                                                    @if (item != null && item.Image != null)
                                                    {
                                                        <img src="ImgUser/usuario-@(item.UserName)-@(item.Image)" class="ImgUser">
                                                    }
                                                    else
                                                    {
                                                        <img src="ImgUser/padrao.jpg" class="ImgUser">

                                                    }
                                               
                                                
                                                </div>
                                           
                                            
                                            </div>
                                            @if(aoVivo){
                                                <div class="aovivo">
                                                <p> Ao Vivo</p>
                                                </div>
                                                <p>@descUser(item.UserName)</p>
                                            }
                                            else{
                                                <p> @descUser(item.UserName) </p>

                                            }
                                        </a>
                                    </h6>
                                </div>

                            }

                        </div>
                    }


                }

        </div>
    </div>

    <div class="botoes">
        <a class="prev btn btn-dark" onclick="@(async() => {await js!.InvokeAsync<object>("slideAnterior", $"");})">
            <span class="carousel-control-prev-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Previous</span>
        </a>
        <a class="prox btn btn-dark" onclick="@(async() => {await js!.InvokeAsync<object>("proximoSlide", $"");})">
            <span class="carousel-control-next-icon" aria-hidden="true"></span>
            <span class="visually-hidden">Next</span>
        </a>

    </div>
</div>


@code{
    List<UserModel>[] array;
    private int itens = 6;
    private int lacos = 0;
    List<UserModel> usuarios;
    private DemoContextFactory db = new DemoContextFactory();
    private ApplicationDbContext Context;
    private bool aoVivo;


    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            try
            {
                string? num = await js.InvokeAsync<string>("retornarlargura", "url");
                var largura = double.Parse(num);

                if (largura > 200 && largura < 300)
                    itens = 2;
                else if (largura > 300 && largura < 400)
                    itens = 3;
                else if (largura > 400 && largura < 500)
                    itens = 4;
                else itens = 6;

                lacos = usuarios.Count / itens;
                var resto = usuarios.Count % itens;
                if (resto != 0) lacos++;
                array = new List<UserModel>[lacos];

                for (var i = 0; i < array.Length; i++)
                {
                    array[i] = new List<UserModel>();
                    array[i].AddRange(usuarios.Skip(itens * i).Take(itens).ToList());
                }


            }
            catch (Exception ex)
            {

            }
        }
    }

    protected override async Task OnInitializedAsync()
    {
        aoVivo = true; 
        Context = db.CreateDbContext(null);
        usuarios = await Context.Users.ToListAsync();
        lacos = usuarios.Count / itens;
        var resto = usuarios.Count % itens;
        if (resto != 0) lacos++;
        array = new List<UserModel>[lacos];

        for (var i = 0; i < array.Length; i++)
        {
            array[i] = new List<UserModel>();
            array[i].AddRange(usuarios.Skip(itens * i).Take(itens).ToList());
        }



    }

    private string descUser(string user)
    {
        if( user.ToList().Count > 10){

            return user.Substring(0, 10) + "...";
        }
        else
        return user;
    }
 }